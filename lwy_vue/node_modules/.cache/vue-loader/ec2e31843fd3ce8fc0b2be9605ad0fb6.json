{"remainingRequest":"D:\\Web1905\\项目\\lwy\\lwy_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Web1905\\项目\\lwy\\lwy_vue\\src\\views\\Details.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Web1905\\项目\\lwy\\lwy_vue\\src\\views\\Details.vue","mtime":1569201213914},{"path":"D:\\Web1905\\项目\\lwy\\lwy_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Web1905\\项目\\lwy\\lwy_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Web1905\\项目\\lwy\\lwy_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Web1905\\项目\\lwy\\lwy_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n    data(){\r\n        return{\r\n            enter:false,\r\n            bgImg:{\r\n               bgImgClass:false \r\n            },\r\n            product:{price:0},\r\n            pics:[{md:'img/detail/md1.jpg',sm:'img/detail/sm1.jpg',lg:'img/detail/lg1.jpg'}],\r\n            specs:[] ,\r\n            imgUrl:\"http://127.0.0.1:5050/\",\r\n            // 判断是选中的哪一张小图片\r\n            i:0,\r\n            // 判断选中的颜色\r\n            colorIndex:-1,\r\n            // 详情的导航部分 判断点击的是哪个部分\r\n            detailNavIndex:0,\r\n            // 礼物详情的模拟数据\r\n            detailsImages:[\"http://127.0.0.1:5050/img/detail/1.jpg\",\"http://127.0.0.1:5050/img/detail/2.jpg\",\"http://127.0.0.1:5050/img/detail/3.jpg\",\"http://127.0.0.1:5050/img/detail/4.jpg\",\"http://127.0.0.1:5050/img/detail/5.jpg\",\"http://127.0.0.1:5050/img/detail/5.jpg\",\"http://127.0.0.1:5050/img/detail/6.jpg\"],\r\n            navOffsetTop:0,\r\n            scrollTop:0,\r\n            // 猜你喜欢的模拟图片数据\r\n            guessList:[\"img/detail/guessULike/1.jpg\",\"img/detail/guessULike/2.jpg\",\"img/detail/guessULike/3.jpg\",\"img/detail/guessULike/5.jpg\",\"img/detail/guessULike/2.jpg\",\"img/detail/guessULike/3.jpg\",\"img/detail/guessULike/5.jpg\",\"img/detail/guessULike/2.jpg\"],\r\n            times:0,\r\n            times2:0,\r\n            guessClass:{transition:true},\r\n            // 定时器timer\r\n            timer:0\r\n        }\r\n    },\r\n    props:{pid:{default:0}},\r\n    created(){\r\n        // console.log(this.pid);\r\n        this.loadMore();    \r\n        this.guessScroll();\r\n    },\r\n    mounted(){\r\n        // 获取礼物详情 规格参数....导航栏距离页面顶部的距离\r\n        this.navOffsetTop=document.getElementById(\"detailNav\").offsetTop;\r\n        // this.navOffsetTop=top;\r\n        // console.log('距离顶部距离'+this.navOffsetTop);\r\n        // 控制轮播指示器 鼠标滑过边框变红的样式数组初始化\r\n    },\r\n    methods:{\r\n        // 鼠标离开 重新开始轮播\r\n        startScroll(e){\r\n             if(e.target.nodeName==\"A\"){\r\n                 this. guessScroll();\r\n                //  console.log(\"鼠标离开\"+this.times);\r\n             }\r\n        },\r\n        // 鼠标滑过指示器 边框变红 轮播图滑动到响应的页数\r\n        scrollDire(e){\r\n            if(e.target.nodeName==\"A\"){\r\n                // console.log(e.target.dataset.i);\r\n                var i=e.target.dataset.i;\r\n                // 变为选中的样式\r\n                this.times=i*1;\r\n                clearInterval(this.timer);\r\n            }\r\n        },\r\n        // 猜你喜欢的自动轮播\r\n        guessScroll(){\r\n            this.timer=setInterval(()=>{\r\n                // console.log(\"times\"+this.times);\r\n                this.times+=1;\r\n                this.guessClass.transition=true;\r\n                if(this.times>(this.guessList.length%5+1)){\r\n                    \r\n                }\r\n                if(this.times>this.guessList.length){\r\n                    this.guessClass.transition=false;\r\n                    this.times=0;\r\n                }\r\n            },2000);\r\n        },\r\n        // 滚动到对应的内容\r\n        toOwn(e){\r\n            if(e.target.nodeName==\"A\"){\r\n                var thisA=e.target;\r\n                // 点击文字变红\r\n                this.detailNavIndex=e.target.dataset.i;\r\n                // 滚动到对应的内容\r\n                var elem=document.getElementById(thisA.dataset.id);\r\n                var dist=this.scrollTop-elem.offsetTop;\r\n                if(thisA.dataset.i==0){\r\n                    if(dist>0){\r\n                        this.scrollToDetail(dist);\r\n                    }\r\n                }else{\r\n                    if(thisA.dataset.i==1){\r\n                        if(this.scrollTop>this.navOffsetTop){\r\n                            dist+=66;\r\n                        }else{\r\n                            dist+=66*2;\r\n                            \r\n                        }      \r\n                        console.log(this.scrollTop+\"elem.offsetTop:\"+elem.offsetTop+\"  滚动的距离\"+dist); \r\n                            this.scrollToDetail(dist);           \r\n                    }\r\n                }\r\n            }\r\n        },\r\n        scrollToDetail(dist){\r\n            // 总距离 dist\r\n            // 总步数\r\n            var steps=50;\r\n            // 总时间\r\n            var dura=500;\r\n            // 每步走多长\r\n            var step= dist/steps;\r\n            // 每步走多长时间\r\n            var interval=dura/steps;\r\n            var timer=setInterval(()=>{\r\n                window.scrollBy(0,-step);\r\n                steps--;\r\n                if(steps==0){\r\n                    clearInterval(timer);\r\n                }\r\n            });\r\n        },\r\n        scroll(t){\r\n            // 从子组件中传过来的值\r\n          this.scrollTop=t; \r\n          console.log(\"scrollTop\"+this.scrollTop); \r\n        //   console.log('距离顶部距离'+this.navOffsetTop);\r\n            // 如果页面滚动到礼物详情内容区域 相应的导航字变红\r\n            if(this.scrollTop>=837 && this.scrollTop<9408){\r\n            this.detailNavIndex=0;  \r\n            }else if(this.scrollTop>=9408 && this.scrollTop<9676){\r\n                // 如果页面滚动到规格参数内容区域 相应的导航字变红\r\n                this.detailNavIndex=1;\r\n            }else{\r\n                this.detailNavIndex=3;\r\n            }\r\n            \r\n        },\r\n        loadMore(){\r\n            (async ()=>{\r\n                var res=await this.axios.get('detail/getPro',{\r\n                    params:{\r\n                        pid:this.pid\r\n                    }\r\n                });\r\n                // console.log(res.data);\r\n                var obj=res.data;\r\n                // this.product=obj.product;\r\n                for (const p in obj.product) {\r\n                // this.$set相当于手动去将this.product处理成一个响应式的属性\r\n                this.$set(this.product,p,obj.product[p]);\r\n                }\r\n                this.pics=obj.pics;\r\n                this.specs=obj.specs;\r\n                // console.log(this.product,this.pics,this.specs);\r\n                console.log(this.pics);\r\n            })();\r\n        },\r\n        //选择颜色事件\r\n        changeColor(e){\r\n            if(e.target.nodeName==\"A\"){\r\n                this.colorIndex=e.target.dataset.ci;\r\n                // 对应的选中相应颜色的小图片与大图片\r\n                this.i=this.colorIndex;\r\n            }\r\n        },\r\n        // 鼠标移到哪个小图片 哪个小图片就加上红色边框 并且切换对应的大图片\r\n        changeImg(e){\r\n            if(e.target.nodeName==\"IMG\"){\r\n                var i=e.target.dataset.i;\r\n                //当前选中的是i图片\r\n                 this.i=i; \r\n            }\r\n            \r\n\r\n        },\r\n        bgImgHandle(){\r\n            (async ()=>{\r\n                var res=await this.axios.get('user/isLogin');\r\n                console.log(res.data);\r\n                if(res.data.code==-1){\r\n                    alert(\"请先登录！登录后才能收藏\");\r\n                }else{\r\n                    this.bgImg.bgImgClass=!this.bgImg.bgImgClass; \r\n                }\r\n            })();\r\n           \r\n        }\r\n    },\r\n    watch:{\r\n        // 一旦浏览器中的地址改变 刷新网页 重新发送ajax请求\r\n        $route(){\r\n            this.loadMore();\r\n        }\r\n    },\r\n    computed:{\r\n        \r\n    }\r\n\r\n}\r\n",{"version":3,"sources":["Details.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkfile":"Details.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n    <div>\r\n        <my-header></my-header>\r\n        <div id=\"page_detail\">\r\n            <bread :breadName=\"['BeeFo小唱机']\"></bread>\r\n            <div class=\"goods_info\">\r\n                <div class=\"center w1200 d-flex\">\r\n                    <div class=\"images d-flex\">\r\n                        <!-- 小图 -->\r\n                        <ul class=\"d-flex\" @mouseover=\"changeImg\">\r\n                            <li v-for=\"(item,index) of pics\" :key=\"index\" >\r\n                                <img :src=\"imgUrl+item.sm\" alt=\"\"  :class=\"i==index?'borderRed':''\" :data-i=\"index\">\r\n                            </li>\r\n                        </ul>\r\n                        <!-- 中图 -->\r\n                        <div class=\"mdImg relative\">\r\n                            <img :src=\"imgUrl+pics[i].md\" alt=\"\">\r\n                            <div v-show=\"enter\" class=\"smMask\"></div>\r\n                            <div class=\"Mask\" @mouseover=\"enter=!enter\" @mouseout=\"enter=!enter\"></div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"goods_attr\">\r\n                        <h2 v-text=\"product.title\"></h2>\r\n                        <h3 class=\"subtitle\" v-text=\"product.subtitle\"></h3>\r\n                        <div class=\"good_price d-flex\">\r\n                            <span>{{product.price.toFixed(2)}}元</span>\r\n                            <span class=\"color666\" v-text=\"pics[i].is_spot?'有现货':'暂时缺货'\"></span>\r\n                        </div>\r\n                        <div class=\"specs\">\r\n                            <div>\r\n                                <span class=\"block color666\">选择规格:</span>\r\n                                <!-- 规格与浏览器中参数id值一致时 说明是选中状态 -->\r\n                                <router-link :to=\"/Details/+item.pid\" v-for=\"(item,index) of specs\" :key=\"index\" class=\"block option\" :class=\"item.pid==pid?'optionSelected':''\"  v-text=\"item.spec\"></router-link>\r\n                            </div>\r\n                            <div class=\"colors\" @click=\"changeColor\">\r\n                                <p>\r\n                                  <span class=\"block color666\">礼物颜色:</span>  \r\n                                </p>\r\n                                <router-link to=\"\" v-for=\"(item,index) of pics\" :key=\"index\"  :data-ci=\"index\" class=\"block option\" :class=\"colorIndex==index?'colorSelected':''\" v-text=\"item.color\"></router-link>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"buy\">\r\n                            <router-link to=\"\" >立即购买</router-link>\r\n                            <a href=\"javascript:;\" class=\"sc\" @click=\"bgImgHandle\">\r\n                                <i :class=\"bgImg\"></i>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div id=\"detailNav\" :class=\"scrollTop>navOffsetTop && navOffsetTop!=0?'fixed':''\" class=\"details_nav\">\r\n                <div class=\"w1200\">\r\n                    <ul class=\"w1200 d-flex\"  @click=\"toOwn\">\r\n                        <li>\r\n                           <a href=\"javascript:;\" data-id=\"detailContent\" :class=\"detailNavIndex==0?'active':''\" data-i=\"0\">礼物详情</a> \r\n                        </li>\r\n                        <li>\r\n                            <a data-id=\"detail_params\" href=\"javascript:;\" :class=\"detailNavIndex==1?'active':''\"  data-i=\"1\">规格参数</a> \r\n                        </li>\r\n                        <li>\r\n                            <a href=\"javascript:;\" :class=\"detailNavIndex==2?'active':''\"  data-i=\"2\">视频晒单(5)</a> \r\n                        </li>\r\n                        <li>\r\n                            <a href=\"javascript:;\" :class=\"detailNavIndex==3?'active':''\"  data-i=\"3\">咨询(5)</a>\r\n                        </li>\r\n                    </ul>\r\n                    <div class=\"service\" v-show=\"scrollTop>navOffsetTop|| navOffsetTop==0\">\r\n                        <span>需要帮助？</span>\r\n                        <router-link to=\"\">QQ在线交谈</router-link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"bg_f5f5f5\" style=\"height:20px\"></div>\r\n            <div class=\"bg_f5f5f5\" id=\"detailContent\">\r\n                <div class=\" w1200 bg_fff\">\r\n                    <img v-for=\"(item,index) of detailsImages\" :key=\"index\" :src=\"item\" alt=\"\">\r\n                </div>\r\n                <div id=\"detail_params\">规格参数</div>\r\n                <div class=\"detailP_details w1200\"></div>\r\n                <div id=\"detailParams\">\r\n                </div>\r\n                <div id=\"detailComment\"></div>\r\n                <div id=\"detailRequest\"></div>\r\n                <!-- 猜你喜欢 -->\r\n                <div id=\"guess_title\">猜你喜欢</div>\r\n                <div class=\"guessULike w1200\">\r\n                    <ul :class=\"guessClass\" :style=\"{'margin-left':-243*times+'px',width:guessList.length*228+(guessList.length-1)*15+'px'}\">\r\n                        <li v-for=\"(item,index) of guessList\" :key=\"index\">\r\n                            <img :src=\"imgUrl+guessList[index]\" alt=\"\">\r\n                            <p>魔法小唱机</p>\r\n                            <p>¥399.0</p>\r\n                        </li>\r\n                    </ul>\r\n                    <!-- 备用ul -->\r\n                    <ul :class=\"guessClass\" :style=\"{width:guessList.length*228+(guessList.length-1)*15+'px'}\">\r\n                        <li v-for=\"(item,index) of guessList\" :key=\"index\">\r\n                            <img :src=\"imgUrl+guessList[index]\" alt=\"\">\r\n                            <p>魔法小唱机</p>\r\n                            <p>¥399.0</p>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <!-- 指示器 -->\r\n                <div class=\"directors\" @mouseover=\"scrollDire\" @mouseout=\"startScroll\">\r\n                    <a href=\"javacsript:;\" v-for=\"i of guessList.length%5+1\" :key=\"i\" :data-i=\"i-1\" :class=\"i-1==times ||(i==guessList.length%5 && times>3)?'borderRed':''\"></a>\r\n                </div>\r\n            </div>\r\n            <!-- 子组件将scrollTop传给父组件 -->\r\n            <tool-bars @scroll=\"scroll\"></tool-bars>   \r\n        </div>\r\n        <my-footer></my-footer>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    data(){\r\n        return{\r\n            enter:false,\r\n            bgImg:{\r\n               bgImgClass:false \r\n            },\r\n            product:{price:0},\r\n            pics:[{md:'img/detail/md1.jpg',sm:'img/detail/sm1.jpg',lg:'img/detail/lg1.jpg'}],\r\n            specs:[] ,\r\n            imgUrl:\"http://127.0.0.1:5050/\",\r\n            // 判断是选中的哪一张小图片\r\n            i:0,\r\n            // 判断选中的颜色\r\n            colorIndex:-1,\r\n            // 详情的导航部分 判断点击的是哪个部分\r\n            detailNavIndex:0,\r\n            // 礼物详情的模拟数据\r\n            detailsImages:[\"http://127.0.0.1:5050/img/detail/1.jpg\",\"http://127.0.0.1:5050/img/detail/2.jpg\",\"http://127.0.0.1:5050/img/detail/3.jpg\",\"http://127.0.0.1:5050/img/detail/4.jpg\",\"http://127.0.0.1:5050/img/detail/5.jpg\",\"http://127.0.0.1:5050/img/detail/5.jpg\",\"http://127.0.0.1:5050/img/detail/6.jpg\"],\r\n            navOffsetTop:0,\r\n            scrollTop:0,\r\n            // 猜你喜欢的模拟图片数据\r\n            guessList:[\"img/detail/guessULike/1.jpg\",\"img/detail/guessULike/2.jpg\",\"img/detail/guessULike/3.jpg\",\"img/detail/guessULike/5.jpg\",\"img/detail/guessULike/2.jpg\",\"img/detail/guessULike/3.jpg\",\"img/detail/guessULike/5.jpg\",\"img/detail/guessULike/2.jpg\"],\r\n            times:0,\r\n            times2:0,\r\n            guessClass:{transition:true},\r\n            // 定时器timer\r\n            timer:0\r\n        }\r\n    },\r\n    props:{pid:{default:0}},\r\n    created(){\r\n        // console.log(this.pid);\r\n        this.loadMore();    \r\n        this.guessScroll();\r\n    },\r\n    mounted(){\r\n        // 获取礼物详情 规格参数....导航栏距离页面顶部的距离\r\n        this.navOffsetTop=document.getElementById(\"detailNav\").offsetTop;\r\n        // this.navOffsetTop=top;\r\n        // console.log('距离顶部距离'+this.navOffsetTop);\r\n        // 控制轮播指示器 鼠标滑过边框变红的样式数组初始化\r\n    },\r\n    methods:{\r\n        // 鼠标离开 重新开始轮播\r\n        startScroll(e){\r\n             if(e.target.nodeName==\"A\"){\r\n                 this. guessScroll();\r\n                //  console.log(\"鼠标离开\"+this.times);\r\n             }\r\n        },\r\n        // 鼠标滑过指示器 边框变红 轮播图滑动到响应的页数\r\n        scrollDire(e){\r\n            if(e.target.nodeName==\"A\"){\r\n                // console.log(e.target.dataset.i);\r\n                var i=e.target.dataset.i;\r\n                // 变为选中的样式\r\n                this.times=i*1;\r\n                clearInterval(this.timer);\r\n            }\r\n        },\r\n        // 猜你喜欢的自动轮播\r\n        guessScroll(){\r\n            this.timer=setInterval(()=>{\r\n                // console.log(\"times\"+this.times);\r\n                this.times+=1;\r\n                this.guessClass.transition=true;\r\n                if(this.times>(this.guessList.length%5+1)){\r\n                    \r\n                }\r\n                if(this.times>this.guessList.length){\r\n                    this.guessClass.transition=false;\r\n                    this.times=0;\r\n                }\r\n            },2000);\r\n        },\r\n        // 滚动到对应的内容\r\n        toOwn(e){\r\n            if(e.target.nodeName==\"A\"){\r\n                var thisA=e.target;\r\n                // 点击文字变红\r\n                this.detailNavIndex=e.target.dataset.i;\r\n                // 滚动到对应的内容\r\n                var elem=document.getElementById(thisA.dataset.id);\r\n                var dist=this.scrollTop-elem.offsetTop;\r\n                if(thisA.dataset.i==0){\r\n                    if(dist>0){\r\n                        this.scrollToDetail(dist);\r\n                    }\r\n                }else{\r\n                    if(thisA.dataset.i==1){\r\n                        if(this.scrollTop>this.navOffsetTop){\r\n                            dist+=66;\r\n                        }else{\r\n                            dist+=66*2;\r\n                            \r\n                        }      \r\n                        console.log(this.scrollTop+\"elem.offsetTop:\"+elem.offsetTop+\"  滚动的距离\"+dist); \r\n                            this.scrollToDetail(dist);           \r\n                    }\r\n                }\r\n            }\r\n        },\r\n        scrollToDetail(dist){\r\n            // 总距离 dist\r\n            // 总步数\r\n            var steps=50;\r\n            // 总时间\r\n            var dura=500;\r\n            // 每步走多长\r\n            var step= dist/steps;\r\n            // 每步走多长时间\r\n            var interval=dura/steps;\r\n            var timer=setInterval(()=>{\r\n                window.scrollBy(0,-step);\r\n                steps--;\r\n                if(steps==0){\r\n                    clearInterval(timer);\r\n                }\r\n            });\r\n        },\r\n        scroll(t){\r\n            // 从子组件中传过来的值\r\n          this.scrollTop=t; \r\n          console.log(\"scrollTop\"+this.scrollTop); \r\n        //   console.log('距离顶部距离'+this.navOffsetTop);\r\n            // 如果页面滚动到礼物详情内容区域 相应的导航字变红\r\n            if(this.scrollTop>=837 && this.scrollTop<9408){\r\n            this.detailNavIndex=0;  \r\n            }else if(this.scrollTop>=9408 && this.scrollTop<9676){\r\n                // 如果页面滚动到规格参数内容区域 相应的导航字变红\r\n                this.detailNavIndex=1;\r\n            }else{\r\n                this.detailNavIndex=3;\r\n            }\r\n            \r\n        },\r\n        loadMore(){\r\n            (async ()=>{\r\n                var res=await this.axios.get('detail/getPro',{\r\n                    params:{\r\n                        pid:this.pid\r\n                    }\r\n                });\r\n                // console.log(res.data);\r\n                var obj=res.data;\r\n                // this.product=obj.product;\r\n                for (const p in obj.product) {\r\n                // this.$set相当于手动去将this.product处理成一个响应式的属性\r\n                this.$set(this.product,p,obj.product[p]);\r\n                }\r\n                this.pics=obj.pics;\r\n                this.specs=obj.specs;\r\n                // console.log(this.product,this.pics,this.specs);\r\n                console.log(this.pics);\r\n            })();\r\n        },\r\n        //选择颜色事件\r\n        changeColor(e){\r\n            if(e.target.nodeName==\"A\"){\r\n                this.colorIndex=e.target.dataset.ci;\r\n                // 对应的选中相应颜色的小图片与大图片\r\n                this.i=this.colorIndex;\r\n            }\r\n        },\r\n        // 鼠标移到哪个小图片 哪个小图片就加上红色边框 并且切换对应的大图片\r\n        changeImg(e){\r\n            if(e.target.nodeName==\"IMG\"){\r\n                var i=e.target.dataset.i;\r\n                //当前选中的是i图片\r\n                 this.i=i; \r\n            }\r\n            \r\n\r\n        },\r\n        bgImgHandle(){\r\n            (async ()=>{\r\n                var res=await this.axios.get('user/isLogin');\r\n                console.log(res.data);\r\n                if(res.data.code==-1){\r\n                    alert(\"请先登录！登录后才能收藏\");\r\n                }else{\r\n                    this.bgImg.bgImgClass=!this.bgImg.bgImgClass; \r\n                }\r\n            })();\r\n           \r\n        }\r\n    },\r\n    watch:{\r\n        // 一旦浏览器中的地址改变 刷新网页 重新发送ajax请求\r\n        $route(){\r\n            this.loadMore();\r\n        }\r\n    },\r\n    computed:{\r\n        \r\n    }\r\n\r\n}\r\n</script>\r\n<style scoped>\r\n    @import url(../assets/css/details.css);\r\n</style>\r\n"]}]}