{"remainingRequest":"D:\\WEB\\lx\\vue\\project\\lwy\\lwy_vue\\node_modules\\babel-loader\\lib\\index.js!D:\\WEB\\lx\\vue\\project\\lwy\\lwy_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\WEB\\lx\\vue\\project\\lwy\\lwy_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WEB\\lx\\vue\\project\\lwy\\lwy_vue\\src\\views\\Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WEB\\lx\\vue\\project\\lwy\\lwy_vue\\src\\views\\Register.vue","mtime":1591957007799},{"path":"D:\\WEB\\lx\\vue\\project\\lwy\\lwy_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591153665092},{"path":"D:\\WEB\\lx\\vue\\project\\lwy\\lwy_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1591153664766},{"path":"D:\\WEB\\lx\\vue\\project\\lwy\\lwy_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591153665092},{"path":"D:\\WEB\\lx\\vue\\project\\lwy\\lwy_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1591153673467}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"D:\\\\WEB\\\\lx\\\\vue\\\\project\\\\lwy\\\\lwy_vue\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport QS from 'qs';\nimport { async } from 'q';\nimport { iphoneLogin, iphoneReg } from \"../assets/js/interface\";\nexport default {\n  data: function data() {\n    return {\n      phone: \"\",\n      pwd: \"\",\n      pwd2: \"\",\n      reg_phone: \"\",\n      reg_pwd: \"\",\n      reg_pwd2: \"\",\n      flag: {\n        regPhone: false,\n        regPwd: false,\n        regPwd2: false\n      } //iphone pwd pwd2\n      // regCanClick:false\n\n    };\n  },\n  methods: {\n    getPhone: function getPhone() {\n      var _this = this;\n\n      _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return iphoneLogin({\n                  iphone: _this.phone\n                });\n\n              case 2:\n                res = _context.sent;\n\n                if (res.code == -1) {\n                  _this.reg_phone = \"该手机号已被注册\";\n                  _this.flag.regPhone = false;\n                } else if (res.code == 1) {\n                  _this.reg_phone = \"\";\n                  _this.flag.regPhone = true;\n                }\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    regTest: function regTest(str, reg, textP, msg) {\n      if (reg.test(str)) {\n        this[textP] = \"\";\n        return true;\n      } else {\n        this[textP] = msg;\n        return false;\n      }\n    },\n    blurPhoneHandle: function blurPhoneHandle(e) {\n      this.phone = this.phone.trim();\n      var reg = /^1[3-9]\\d{9}$/;\n      var isCorrect = this.regTest(this.phone, reg, \"reg_phone\", \"手机号格式不正确\"); // console.log(this.phone,isCorrect);\n\n      if (!isCorrect) {\n        this.flag.regPhone = false;\n      } else {\n        // 验证用户手机号是否被使用\n        this.getPhone();\n      }\n    },\n    blurPwdHandle: function blurPwdHandle(e) {\n      this.pwd = this.pwd.trim();\n      var reg = /^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{6,12}$/;\n      var isCorrect = this.regTest(this.pwd, reg, \"reg_pwd\", \"请输入正确格式的密码(6~12位 数字+字母)\");\n\n      if (!isCorrect) {\n        this.flag.regPwd = false;\n      } else {\n        this.flag.regPwd = true;\n      }\n    },\n    blurPwd2Handle: function blurPwd2Handle(e) {\n      this.pwd2 = this.pwd2.trim();\n      var pwd2 = this.pwd2.replace(/[a-z]/ig, function (kw) {\n        return kw.toUpperCase();\n      });\n      var pwd = this.pwd.replace(/[a-z]/ig, function (kw) {\n        return kw.toUpperCase();\n      });\n\n      if (pwd2 !== pwd) {\n        this.reg_pwd2 = \"两次输入密码不一致\";\n        this.flag.regPwd2 = false;\n      } else {\n        this.reg_pwd2 = \"\";\n        this.flag.regPwd2 = true;\n      }\n    },\n    // 立即注册单击事件\n    regNowHandle: function regNowHandle() {\n      var _this2 = this;\n\n      // console.log(this.flag);\n      // for (const key in this.flag) {\n      //     if (!this.flag[key]) {\n      //         document.getElementById(key).focus();\n      //         return;  \n      //     }\n      // }\n      // console.log(\"格式都正确\");\n      // return;\n      console.log(this.regCanClick);\n\n      if (this.regCanClick) {\n        //    格式正确       \n        _asyncToGenerator(\n        /*#__PURE__*/\n        regeneratorRuntime.mark(function _callee2() {\n          var res, loginRes;\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return iphoneReg({\n                    iphone: _this2.phone,\n                    upwd: _this2.pwd2\n                  });\n\n                case 2:\n                  res = _context2.sent;\n\n                  if (!(res.code == 200)) {\n                    _context2.next = 9;\n                    break;\n                  }\n\n                  alert(\"注册成功！欢迎您\" + _this2.phone); //   自动登录\n\n                  _context2.next = 7;\n                  return iphoneLogin({\n                    iphone: _this2.phone,\n                    upwd: _this2.pwd2\n                  });\n\n                case 7:\n                  loginRes = _context2.sent;\n\n                  if (loginRes.code == 1) {\n                    _this2.$router.push('/');\n                  } else {\n                    alert('登录失败,请稍后再试');\n                  }\n\n                case 9:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }))();\n      }\n    }\n  },\n  created: function created() {},\n  computed: {\n    regCanClick: function regCanClick() {\n      var sum = 0,\n          trueC = 0;\n\n      for (var key in this.flag) {\n        console.log(this.flag[key]);\n        sum++;\n\n        if (this.flag[key]) {\n          trueC++;\n        }\n      }\n\n      console.log(trueC == sum);\n      return sum == trueC;\n    }\n  }\n};",{"version":3,"sources":["Register.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div id=\"regContent\">\r\n        <h2>注册礼无忧账号</h2> \r\n        <input id=\"regPhone\" @blur=\"blurPhoneHandle\" placeholder=\"请输入手机号\" v-model=\"phone\" v-autoFocus>\r\n        <div v-text=\"reg_phone\"></div>\r\n        <input id=\"regPwd\" @blur=\"blurPwdHandle\" type=\"password\" placeholder=\"请输入密码6-12位(字母+数字)\" v-model=\"pwd\">\r\n        <div v-text=\"reg_pwd\"></div>\r\n        <input id=\"regPwd2\" @blur=\"blurPwd2Handle\" type=\"password\" placeholder=\"再次输入密码\" v-model=\"pwd2\">\r\n        <div v-text=\"reg_pwd2\"></div>\r\n        <p>\r\n            注册即为同意\r\n            <a href=\"javascript:;\">《礼无忧用户注册协议》</a>\r\n        </p>\r\n        <input @click=\"regNowHandle\" type=\"button\" value=\"立即注册\" id=\"reg\" :class=\"{disabled:!regCanClick}\">\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport QS from 'qs'\r\nimport { async } from 'q';\r\nimport {iphoneLogin,iphoneReg} from '../assets/js/interface'\r\nexport default {\r\n    data(){\r\n        return{\r\n            phone:\"\",\r\n            pwd:\"\",\r\n            pwd2:\"\",\r\n            reg_phone:\"\",\r\n            reg_pwd:\"\",\r\n            reg_pwd2:\"\",\r\n            flag:{regPhone:false,regPwd:false,regPwd2:false}, //iphone pwd pwd2\r\n            // regCanClick:false\r\n        }\r\n    },\r\n    methods:{\r\n        getPhone(){\r\n            (async ()=>{\r\n                var res=await iphoneLogin({iphone:this.phone});\r\n                if(res.code==-1){\r\n                    this.reg_phone=\"该手机号已被注册\";\r\n                     this.flag.regPhone=false;\r\n                }else if(res.code==1){\r\n                    this.reg_phone=\"\";\r\n                    this.flag.regPhone=true;\r\n                }\r\n            })();\r\n        },\r\n        regTest(str,reg,textP,msg){\r\n            if(reg.test(str)){\r\n                this[textP]=\"\";\r\n                return true;\r\n            }else{\r\n                this[textP]=msg;\r\n                return false;\r\n            }\r\n        },\r\n        blurPhoneHandle(e){\r\n            this.phone=this.phone.trim();\r\n            var reg=/^1[3-9]\\d{9}$/;\r\n            var isCorrect=this.regTest(this.phone,reg,\"reg_phone\",\"手机号格式不正确\");\r\n            // console.log(this.phone,isCorrect);\r\n            if(!isCorrect){\r\n                this.flag.regPhone=false;\r\n            }else{\r\n                // 验证用户手机号是否被使用\r\n                this.getPhone();     \r\n            } \r\n        },\r\n        blurPwdHandle(e){\r\n            this.pwd=this.pwd.trim();\r\n            var reg=/^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{6,12}$/;\r\n            var isCorrect=this.regTest(this.pwd,reg,\"reg_pwd\",\"请输入正确格式的密码(6~12位 数字+字母)\");\r\n            if(!isCorrect){\r\n                this.flag.regPwd=false;\r\n            }else{\r\n                this.flag.regPwd=true;\r\n            } \r\n        },\r\n        blurPwd2Handle(e){\r\n            this.pwd2=this.pwd2.trim();\r\n            var pwd2=this.pwd2.replace(/[a-z]/ig,(kw)=>{\r\n                return kw.toUpperCase();\r\n            });\r\n            var pwd=this.pwd.replace(/[a-z]/ig,(kw)=>{\r\n                return kw.toUpperCase();\r\n            });\r\n            if(pwd2!==pwd){\r\n                this.reg_pwd2=\"两次输入密码不一致\";\r\n                this.flag.regPwd2=false;\r\n            }else{\r\n                this.reg_pwd2=\"\";\r\n                this.flag.regPwd2=true;\r\n            }\r\n        },\r\n        // 立即注册单击事件\r\n        regNowHandle(){     \r\n            // console.log(this.flag);\r\n            // for (const key in this.flag) {\r\n            //     if (!this.flag[key]) {\r\n            //         document.getElementById(key).focus();\r\n            //         return;  \r\n            //     }\r\n            // }\r\n            // console.log(\"格式都正确\");\r\n            // return;\r\n            console.log(this.regCanClick);\r\n            if(this.regCanClick){\r\n                //    格式正确       \r\n                (async ()=>{\r\n                    var res=await iphoneReg({\r\n                            iphone:this.phone,\r\n                            upwd:this.pwd2\r\n                    });\r\n                    if(res.code==200){\r\n                        alert(\"注册成功！欢迎您\"+this.phone); \r\n                    //   自动登录\r\n                    var loginRes=await iphoneLogin({\r\n                        iphone:this.phone,\r\n                        upwd:this.pwd2\r\n                    });\r\n                    if(loginRes.code==1){\r\n                        this.$router.push('/');\r\n                    }else{\r\n                        alert('登录失败,请稍后再试');\r\n                    }         \r\n                    }\r\n                })();   \r\n            }\r\n        }\r\n    },\r\n    created(){\r\n\r\n    },\r\n    computed:{\r\n        regCanClick(){\r\n            var sum=0,trueC=0;\r\n            for (const key in this.flag) {\r\n                console.log(this.flag[key]);\r\n                sum++;\r\n                if (this.flag[key]) {\r\n                    trueC++;            \r\n                }\r\n            }\r\n            console.log(trueC==sum);\r\n            return sum==trueC;\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style>\r\n    @import url(../assets/css/register.css);\r\n</style>\r\n\r\n"],"sourceRoot":"src/views"}]}