{"remainingRequest":"G:\\前端资料备份\\项目\\lwy_git\\lwy\\lwy_vue\\node_modules\\babel-loader\\lib\\index.js!G:\\前端资料备份\\项目\\lwy_git\\lwy\\lwy_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!G:\\前端资料备份\\项目\\lwy_git\\lwy\\lwy_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\前端资料备份\\项目\\lwy_git\\lwy\\lwy_vue\\src\\views\\Cart.vue?vue&type=script&lang=js&","dependencies":[{"path":"G:\\前端资料备份\\项目\\lwy_git\\lwy\\lwy_vue\\src\\views\\Cart.vue","mtime":1570207663885},{"path":"G:\\前端资料备份\\项目\\lwy_git\\lwy\\lwy_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1568903608807},{"path":"G:\\前端资料备份\\项目\\lwy_git\\lwy\\lwy_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1568903607355},{"path":"G:\\前端资料备份\\项目\\lwy_git\\lwy\\lwy_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1568903608807},{"path":"G:\\前端资料备份\\项目\\lwy_git\\lwy\\lwy_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1568903643169}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"G:\\\\\\u524D\\u7AEF\\u8D44\\u6599\\u5907\\u4EFD\\\\\\u9879\\u76EE\\\\lwy_git\\\\lwy\\\\lwy_vue\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      list: [],\n      imgUrl: 'http://127.0.0.1:5050/',\n      pcount: 0,\n      LoginState: false\n    };\n  },\n  methods: {\n    // 删除当前商品\n    dele: function dele(e) {\n      if (e.target.nodeName == \"A\" && e.target.id == \"del\") {\n        var i = e.target.dataset.i;\n        this.list.splice(i, 1);\n        var products = JSON.parse(localStorage.getItem(\"cartProducts\"));\n        products.splice(i, 1);\n        localStorage.setItem(\"cartProducts\", JSON.stringify(products));\n      }\n    },\n    // 购物车数量单击按钮事件\n    countChange: function countChange(val, i) {\n      if (val == -1) {\n        if (this.list[i].count == 1) {\n          return;\n        }\n\n        this.list[i].count -= 1;\n      } else if (val == 1) {\n        this.list[i].count += 1;\n      } // 将变化的数量保存到localstorage中\n\n\n      var products = JSON.parse(localStorage.getItem(\"cartProducts\"));\n      products[i].count = this.list[i].count;\n      localStorage.setItem(\"cartProducts\", JSON.stringify(products));\n    },\n    // 判断是否登录\n    isLogin: function isLogin() {\n      var _this = this;\n\n      _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.axios.get('user/isLogin');\n\n              case 2:\n                res = _context.sent;\n\n                if (res.data.code == -1) {\n                  console.log('未登录');\n                  _this.LoginState = true;\n                } else {\n                  console.log('已登录');\n                  _this.LoginState = false;\n                }\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    loadMore: function loadMore() {\n      this.isLogin(); // 未登录 读取浏览器存储的数据\n\n      if (!this.LoginState) {\n        this.list = this.$store.getters.getstorageCart;\n        console.log(this.list);\n      } else {\n        // 如果用户登录状态 浏览器中有商品数据 则将其逐个添加到数据库中\n        var localList = this.$store.getters.getstorageCart;\n\n        if (localList) {\n          var addCartList = [];\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = localList[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var p = _step.value;\n              addCartList.push(this.axios.get('cart/addCart', {\n                params: {\n                  pid: p.pid,\n                  pic: p.sm,\n                  title: p.title,\n                  spec: p.spec,\n                  price: p.price,\n                  is_spot: p['is_spot'],\n                  color: p.color,\n                  count: p.count\n                }\n              }));\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n\n          Promise.all(addCartList).then(function (arr) {\n            var result = arr.every(function (ele) {\n              if (ele == 1) {\n                return true;\n              }\n            });\n            console.log(result);\n          });\n        }\n      }\n    }\n  },\n  created: function created() {\n    // 用户是否登录？登录状态查询当前浏览器中cartProducts是否有信息？\n    // 浏览器端有存储信息 将存储信息中的\n    this.loadMore();\n    console.log(\"购物车\");\n  },\n  computed: {\n    total: function total() {\n      return this.list.reduce(function (prev, value) {\n        prev += value.price * value.count;\n        return prev;\n      }, 0);\n    }\n  }\n};",{"version":3,"sources":["Cart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"cart_page bg_f5f5f5\">\r\n        <!-- 顶部导航栏 -->\r\n        <div class=\"top_nav bg_fff\">\r\n            <div class=\"center w1200  d-flex\">\r\n                <div class=\"title\">\r\n                    <router-link to=\"/\" class=\"block\" id=\"logo_icon\"></router-link>\r\n                    <span>我的购物车</span>\r\n                </div>\r\n                <ul class=\"d-flex\">\r\n                    <li>\r\n                        <span>US000061487</span>     \r\n                    </li>\r\n                    <li>\r\n                        <router-link to=\"\" class=\"changeRed\">个人中心</router-link>\r\n                    </li>\r\n                    <li>\r\n                        <router-link to=\"\" class=\"changeRed\">我的订单</router-link>\r\n                    </li>\r\n                    <li>\r\n                        <router-link to=\"\" class=\"changeRed\">浏览历史</router-link>\r\n                    </li>    \r\n                    <li>\r\n                        <router-link to=\"\" class=\"changeRed\">退出登录</router-link>\r\n                    </li>    \r\n                </ul>\r\n            </div>\r\n        </div>\r\n        <!-- 面包屑 -->\r\n        <bread :breadName=\"['购物车']\"></bread>\r\n        <!-- 购物车中没有商品时显示 -->\r\n        <div v-if=\"!list.length\" class=\"cartEmpty w1200 bg_fff\">\r\n            <p>购物车中没有礼物</p>\r\n            <p>\r\n                <router-link class=\"changeRed\" to=\"\">继续购物</router-link>\r\n            </p>\r\n        </div>\r\n        <!-- 有商品时的显示 -->\r\n        <div v-else class=\"cartList w1200 bg_fff\">\r\n            <ul class=\"d-flex\">\r\n                <li>商品信息</li>\r\n                <li>单价</li>\r\n                <li>数量</li>\r\n                <li>库存</li>\r\n                <li>小计</li>\r\n                <li>操作</li>\r\n            </ul>\r\n            <ul class=\"detail\">\r\n                <li @click=\"dele\" v-for=\"(item,index) of list\" :key=\"index\" class=\"d-flex\">\r\n                    <div class=\"d-flex\">\r\n                        <router-link :to=\"'/Details/'+item.pid\">\r\n                            <img :src=\"imgUrl+item.pic\" alt=\"\">\r\n                        </router-link>\r\n                        <p>\r\n                            <router-link to=\"\" v-text=\"item.title\"></router-link>\r\n                            <span class=\"block2 color666 font12\" v-if=\"item.color\">{{'礼物款式:'+item.color}}</span>\r\n                            <span class=\"block2 color666 font12\">礼物款式:{{item.spec}}</span>\r\n                        </p>\r\n                    </div>\r\n                    <div>¥{{item.price | priceFilter}}</div>\r\n                    <div>\r\n                        <div>\r\n                            <a href=\"javascript:;\" @click=\"countChange(-1,index)\"></a>\r\n                            <input type=\"text\" v-model=\"item.count\">\r\n                            <a href=\"javascript:;\" @click=\"countChange(1,index)\"></a>\r\n                        </div> \r\n                    </div>\r\n                    <div v-text=\"item['is_spot']?'有库存':'无库存'\"></div>\r\n                    <div>¥{{item.price*item.count | priceFilter}}</div>\r\n                    <div>\r\n                        <a href=\"javascript:;\" data-i=\"index\" id=\"del\"></a>\r\n                    </div> \r\n                </li>\r\n            </ul>\r\n            <!-- 结算 -->\r\n            <div class=\"cart_total d-flex\">\r\n                <router-link to=\"\" class=\"changeRed\">\r\n                    <i></i>\r\n                    继续购物\r\n                </router-link>\r\n                <div class=\"right d-flex\">\r\n                    <span class=\"font16\" v-text=\"`共${list.length}件商品`\"></span>\r\n                    <span class=\"font16\">合计：\r\n                        <b>¥ {{total | priceFilter}}</b>\r\n                    </span>\r\n                    <router-link to=\"\" class=\"changeRed font16\">去结算</router-link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <my-footer></my-footer>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    data(){\r\n        return {\r\n            list:[],\r\n            imgUrl:'http://127.0.0.1:5050/',\r\n            pcount:0,\r\n            LoginState:false\r\n        }\r\n    },\r\n    methods:{\r\n        // 删除当前商品\r\n        dele(e){\r\n            if(e.target.nodeName==\"A\" && e.target.id==\"del\"){\r\n                var i=e.target.dataset.i;\r\n                this.list.splice(i,1);\r\n                let products=JSON.parse(localStorage.getItem(\"cartProducts\"));\r\n                products.splice(i,1);\r\n                localStorage.setItem(\"cartProducts\",JSON.stringify(products));\r\n            }\r\n        },\r\n        // 购物车数量单击按钮事件\r\n        countChange(val,i){\r\n            if(val==-1){\r\n                if(this.list[i].count==1){\r\n                    return;\r\n                }\r\n                this.list[i].count-=1;\r\n            }else if(val==1){\r\n                this.list[i].count+=1;\r\n            }\r\n            // 将变化的数量保存到localstorage中\r\n            let products=JSON.parse(localStorage.getItem(\"cartProducts\"));\r\n            products[i].count=this.list[i].count;\r\n            localStorage.setItem(\"cartProducts\",JSON.stringify(products));\r\n        },\r\n        // 判断是否登录\r\n        isLogin(){\r\n            (async ()=>{\r\n                var res=await this.axios.get('user/isLogin');\r\n                if(res.data.code==-1){\r\n                    console.log('未登录');\r\n                    this.LoginState=true;\r\n                }else{\r\n                    console.log('已登录');\r\n                    this.LoginState=false;\r\n                }\r\n            })();\r\n        },\r\n        loadMore(){\r\n            this.isLogin();\r\n            // 未登录 读取浏览器存储的数据\r\n            if(!this.LoginState){\r\n                this.list=this.$store.getters.getstorageCart;\r\n                console.log(this.list);\r\n            }else{\r\n                // 如果用户登录状态 浏览器中有商品数据 则将其逐个添加到数据库中\r\n                var localList=this.$store.getters.getstorageCart;\r\n                if(localList){\r\n                    var addCartList=[];\r\n                    for (const p of localList) {\r\n                        addCartList.push(\r\n                           this.axios.get('cart/addCart',{\r\n                            params:{\r\n                                pid:p.pid,\r\n                                pic:p.sm,\r\n                                title:p.title,\r\n                                spec:p.spec,\r\n                                price:p.price,\r\n                                is_spot:p['is_spot'],\r\n                                color:p.color,\r\n                                count:p.count\r\n                            }\r\n                        }) \r\n                        );\r\n                    }\r\n                    Promise.all(addCartList).then(arr=>{\r\n                        var result=arr.every((ele)=>{\r\n                            if(ele==1){\r\n                                return true;\r\n                            }\r\n                        });\r\n                        console.log(result);\r\n                    }); \r\n                }\r\n            }\r\n        }\r\n    },\r\n    created(){\r\n        // 用户是否登录？登录状态查询当前浏览器中cartProducts是否有信息？\r\n        // 浏览器端有存储信息 将存储信息中的\r\n        this.loadMore();\r\n        console.log(\"购物车\");\r\n\r\n    },\r\n    computed:{\r\n        total(){\r\n            return this.list.reduce((prev,value)=>{\r\n                prev+=value.price*value.count;\r\n                return prev;\r\n            },0);\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style>\r\n    @import url(../assets/css/cart.css);\r\n</style>\r\n\r\n"],"sourceRoot":"src/views"}]}