{"remainingRequest":"D:\\WEB\\lx\\vue\\project\\lwy\\lwy_vue\\node_modules\\babel-loader\\lib\\index.js!D:\\WEB\\lx\\vue\\project\\lwy\\lwy_vue\\src\\store\\cart.js","dependencies":[{"path":"D:\\WEB\\lx\\vue\\project\\lwy\\lwy_vue\\src\\store\\cart.js","mtime":1591876354816},{"path":"D:\\WEB\\lx\\vue\\project\\lwy\\lwy_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591153665092},{"path":"D:\\WEB\\lx\\vue\\project\\lwy\\lwy_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1591153664766}],"contextDependencies":[],"result":["import \"core-js/modules/es6.string.iterator\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"D:\\\\WEB\\\\lx\\\\vue\\\\project\\\\lwy\\\\lwy_vue\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nimport apis from \"./api\";\nimport { addToCart, getCart, updateCart, delCartProduct } from \"../assets/js/interface\";\nexport default {\n  state: {\n    cartList: [],\n    // [cid:false] 关联数组\n    checkStatus: [] // 数量也在本地存一份\n\n  },\n  getters: {\n    getCartList: function getCartList(state) {\n      return state.cartList;\n    },\n    // 购物车商品总数量\n    getCount: function getCount(state) {\n      var c = 0;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = state.cartList[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var p = _step.value;\n          c += p.count;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return c;\n    },\n    getCheckStatus: function getCheckStatus(state) {\n      return state.checkStatus;\n    },\n    getIsAllCheck: function getIsAllCheck(state) {\n      var sum = 0,\n          trueC = 0; // var checks=this.getters.getCheckStatus();\n\n      for (var c in state.checkStatus) {\n        sum++;\n\n        if (state.checkStatus[c] == true) {\n          trueC++;\n        }\n      }\n\n      return sum == trueC;\n    },\n    getSelectCount: function getSelectCount(state) {\n      var c = 0;\n\n      var _loop = function _loop(key) {\n        if (state.checkStatus[key] == true) {\n          state.cartList.forEach(function (e) {\n            if (e.cid == key) {\n              c += e.count;\n            }\n          });\n        }\n      };\n\n      for (var key in state.checkStatus) {\n        _loop(key);\n      }\n\n      return c;\n    },\n    getSelectTotal: function getSelectTotal(state) {\n      var total = 0;\n\n      var _loop2 = function _loop2(key) {\n        if (state.checkStatus[key] == true) {\n          state.cartList.forEach(function (e) {\n            if (e.cid == key) {\n              total += e.price * e.count;\n            }\n          });\n        }\n      };\n\n      for (var key in state.checkStatus) {\n        _loop2(key);\n      }\n\n      return total;\n    }\n  },\n  mutations: {\n    // state.chosenList中有商品的checked发生改变\n    updateChecked: function updateChecked(state, obj) {\n      for (var c in state.checkStatus) {\n        if (c == obj.cid) {\n          state.checkStatus[c] = obj.checked;\n        }\n      }\n\n      localStorage.setItem(\"chosenList\", JSON.stringify(state.chosenList));\n    },\n    // 删除取消勾选的商品\n    delChecked: function delChecked(state, cid) {\n      state.chosenList = state.chosenList.filter(function (e) {\n        e.cid != cid;\n      }); // 将更改存到localStorage中\n\n      localStorage.setItem(\"chosenList\", JSON.stringify(state.chosenList));\n    },\n    // 增加商品\n    addCartList: function addCartList(state, product) {\n      // 更新到state中  没有商品数据，直接加入，否则遍历比对，相同的商品count+1\n      var arr = apis.compareAdd(state.cartList, product);\n      state.cartList = arr; //  判断是否需要更新到localStorage中\n\n      if (!this.getters.getIsLogin) {\n        localStorage.setItem(\"cartlist\", JSON.stringify(arr));\n      }\n    },\n    // 修改\n    setCartList: function setCartList(state, obj) {\n      console.log(\"修改前\" + state.cartList);\n      state.cartList.forEach(function (ele) {\n        if (ele.cid == obj.cid) {\n          ele.count = obj.count;\n        }\n      });\n      console.log(\"修改后\" + state.cartList); // 判断是否需要更新到localStorage中\n\n      if (!this.getters.getIsLogin) {\n        localStorage.setItem(\"cartlist\", JSON.stringify(state.cartList));\n      }\n    },\n    // 删除\n    delProduct: function delProduct(state, cid) {\n      state.cartList.forEach(function (e, i, arr) {\n        if (e.cid == cid) {\n          arr.splice(i, 1);\n        }\n      }); // 判断是否需要更新到localStorage中\n\n      if (!this.getters.getIsLogin) {\n        localStorage.setItem(\"cartlist\", JSON.stringify(state.cartList));\n      }\n    },\n    setAllCheck: function setAllCheck(state, bool) {\n      state.checkStatus = state.checkStatus.map(function (e) {\n        return bool;\n      });\n      localStorage.setItem(\"checkStatus\", JSON.stringify(state.checkStatus));\n    },\n    // \n    changeStatus: function changeStatus(state, cid) {\n      var temp = state.checkStatus.map(function (e) {\n        return e;\n      });\n\n      for (var key in temp) {\n        if (key == cid) {\n          temp[cid] = !temp[cid];\n        }\n      }\n\n      state.checkStatus = temp;\n      localStorage.setItem(\"checkStatus\", JSON.stringify(temp));\n    },\n    delStatus: function delStatus(state, cid) {\n      var temp = state.checkStatus.map(function (e) {\n        return e;\n      });\n\n      for (var key in temp) {\n        if (key == cid) {\n          delete temp[key];\n        }\n      }\n\n      state.checkStatus = temp;\n      localStorage.setItem(\"checkStatus\", JSON.stringify(temp));\n    }\n  },\n  actions: {\n    // 初始化state\n    cartInit: function () {\n      var _cartInit = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(context) {\n        var list, res;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!this.getters.getIsLogin) {\n                  _context.next = 14;\n                  break;\n                }\n\n                // 登录状态\n                console.log(\"购物车登录状态\"); // 将localStorage中的数据添加到数据库中\n\n                list = JSON.parse(localStorage.getItem(\"cartlist\")) || [];\n                console.log(list.length);\n\n                if (!(list.length > 0)) {\n                  _context.next = 9;\n                  break;\n                }\n\n                console.log('localStorage中有数据');\n                list = list.map(function (ele) {\n                  return addToCart(ele);\n                });\n                _context.next = 9;\n                return Promise.all(list).then(function (arr) {\n                  arr.forEach(function (ele) {\n                    console.log(ele.code);\n                  });\n\n                  if (arr.every(function (ele) {\n                    return ele.code == 1;\n                  })) {\n                    // 插入成功 清除localStorage\n                    localStorage.removeItem(\"cartlist\");\n                    console.log(\"全部合并成功\");\n                  }\n                });\n\n              case 9:\n                _context.next = 11;\n                return getCart();\n\n              case 11:\n                res = _context.sent;\n\n                if (res.code == 200) {\n                  context.state.cartList = res.result;\n                  console.log(\"state.cartList\", context.state.cartList);\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 14:\n                // 非登录状态 从webStorage中取\n                context.state.cartList = JSON.parse(localStorage.getItem(\"cartlist\")) || []; // console.log(\"state.count\",context.getters.getCount); \n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function cartInit(_x) {\n        return _cartInit.apply(this, arguments);\n      }\n\n      return cartInit;\n    }(),\n    // 购物车增加商品\n    addCart: function () {\n      var _addCart = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(context, product) {\n        var res;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!this.getters.getIsLogin) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                _context2.next = 3;\n                return addToCart(product);\n\n              case 3:\n                res = _context2.sent;\n\n                if (res.code == 1) {\n                  // 添加成功\n                  // 将商品信息更新到state中\n                  context.commit(\"addCartList\", product);\n                }\n\n                _context2.next = 8;\n                break;\n\n              case 7:\n                // 更新到localStorage中\n                context.commit(\"addCartList\", product);\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function addCart(_x2, _x3) {\n        return _addCart.apply(this, arguments);\n      }\n\n      return addCart;\n    }(),\n    // 修改某个购物车商品\n    changeCart: function () {\n      var _changeCart = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(context, obj) {\n        var res;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!this.getters.getIsLogin) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                _context3.next = 3;\n                return updateCart(obj);\n\n              case 3:\n                res = _context3.sent;\n\n                if (res.code == 1) {\n                  console.log(\"商品修改成功\");\n                  context.commit(\"setCartList\", obj);\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 6:\n                context.commit(\"setCartList\", obj);\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function changeCart(_x4, _x5) {\n        return _changeCart.apply(this, arguments);\n      }\n\n      return changeCart;\n    }(),\n    // 删除某个商品\n    del: function () {\n      var _del = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4(context, obj) {\n        var res;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!this.getters.getIsLogin) {\n                  _context4.next = 7;\n                  break;\n                }\n\n                // 更新数据库购物车表\n                console.log(\"即将删除\");\n                _context4.next = 4;\n                return delCartProduct({\n                  cid: obj.cid\n                });\n\n              case 4:\n                res = _context4.sent;\n\n                if (res.code == 1) {\n                  console.log(\"商品删除成功\");\n                  context.commit(\"delProduct\", obj.cid);\n                  context.commit(\"delStatus\", obj.cid);\n                }\n\n                return _context4.abrupt(\"return\");\n\n              case 7:\n                context.commit(\"delProduct\", obj.cid);\n                context.commit(\"delStatus\", obj.cid);\n\n              case 9:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function del(_x6, _x7) {\n        return _del.apply(this, arguments);\n      }\n\n      return del;\n    }(),\n    // 购物车勾选状态初始化\n    checkedInit: function checkedInit(_ref) {\n      var state = _ref.state,\n          commit = _ref.commit;\n      var temp = [];\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = state.cartList[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var p = _step2.value;\n          temp[p.cid] = true;\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      if (localStorage.getItem(\"checkStatus\") !== null) {\n        var checkStatus = JSON.parse(localStorage.getItem(\"checkStatus\"));\n\n        for (var c in checkStatus) {\n          if (checkStatus[c] == false && temp[c] !== undefined) {\n            temp[c] = false;\n          }\n        }\n      }\n\n      state.checkStatus = temp;\n    }\n  }\n};",{"version":3,"sources":["D:\\WEB\\lx\\vue\\project\\lwy\\lwy_vue\\src\\store\\cart.js"],"names":["apis","addToCart","getCart","updateCart","delCartProduct","state","cartList","checkStatus","getters","getCartList","getCount","c","p","count","getCheckStatus","getIsAllCheck","sum","trueC","getSelectCount","key","forEach","e","cid","getSelectTotal","total","price","mutations","updateChecked","obj","checked","localStorage","setItem","JSON","stringify","chosenList","delChecked","filter","addCartList","product","arr","compareAdd","getIsLogin","setCartList","console","log","ele","delProduct","i","splice","setAllCheck","bool","map","changeStatus","temp","delStatus","actions","cartInit","context","list","parse","getItem","length","Promise","all","then","code","every","removeItem","res","result","addCart","commit","changeCart","del","checkedInit","undefined"],"mappings":"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","sourcesContent":["\r\nimport apis from './api';\r\nimport {addToCart,getCart,updateCart,delCartProduct} from '../assets/js/interface'\r\nexport default{\r\n    state:{\r\n        cartList:[],\r\n        // [cid:false] 关联数组\r\n        checkStatus: []\r\n        // 数量也在本地存一份\r\n    },\r\n    getters:{\r\n        getCartList(state){        \r\n            return state.cartList;\r\n        },\r\n        // 购物车商品总数量\r\n        getCount(state){\r\n            var c=0;\r\n            for (const p of state.cartList) {\r\n                c+=p.count;\r\n            }\r\n            return c;\r\n        },\r\n        getCheckStatus(state){\r\n            return state.checkStatus;\r\n        },\r\n        getIsAllCheck(state){\r\n            var sum=0,trueC=0;\r\n            // var checks=this.getters.getCheckStatus();\r\n            for (const c in state.checkStatus) {\r\n                sum++;\r\n                if (state.checkStatus[c]==true) {\r\n                    trueC++;\r\n                }\r\n            }\r\n            return sum==trueC;\r\n        },\r\n        getSelectCount(state){\r\n            var c=0;\r\n            for (const key in state.checkStatus) {\r\n                if (state.checkStatus[key]==true) {\r\n                   state.cartList.forEach(e=>{\r\n                       if(e.cid==key){\r\n                           c+=e.count;\r\n                       }\r\n                   }) \r\n                }\r\n            }\r\n            return c;\r\n        },\r\n        getSelectTotal(state){\r\n            var total=0;\r\n            for (const key in state.checkStatus) {\r\n                if (state.checkStatus[key]==true) {\r\n                   state.cartList.forEach(e=>{\r\n                       if(e.cid==key){\r\n                           total+=e.price*e.count;\r\n                       }\r\n                   }) \r\n                }\r\n            }\r\n            return total;\r\n        }\r\n    },\r\n    mutations:{\r\n        // state.chosenList中有商品的checked发生改变\r\n        updateChecked(state,obj){\r\n            for (const c in state.checkStatus) {\r\n                if(c==obj.cid){\r\n                    state.checkStatus[c]=obj.checked;   \r\n                }\r\n            }\r\n            localStorage.setItem(\"chosenList\",JSON.stringify(state.chosenList));\r\n        },\r\n        // 删除取消勾选的商品\r\n        delChecked(state,cid){\r\n            state.chosenList=state.chosenList.filter(e=>{e.cid!=cid});\r\n            // 将更改存到localStorage中\r\n            localStorage.setItem(\"chosenList\",JSON.stringify(state.chosenList));\r\n        },\r\n        // 增加商品\r\n        addCartList(state,product){\r\n            // 更新到state中  没有商品数据，直接加入，否则遍历比对，相同的商品count+1\r\n            var arr=apis.compareAdd(state.cartList,product);\r\n            state.cartList=arr;          \r\n            //  判断是否需要更新到localStorage中\r\n            if(!this.getters.getIsLogin){\r\n                localStorage.setItem(\"cartlist\",JSON.stringify(arr));\r\n            }\r\n        },\r\n        // 修改\r\n        setCartList(state,obj){\r\n            console.log(\"修改前\"+state.cartList);\r\n            state.cartList.forEach(ele=>{\r\n                if(ele.cid==obj.cid){\r\n                    ele.count=obj.count;   \r\n                }\r\n            });\r\n            console.log(\"修改后\"+state.cartList);\r\n            // 判断是否需要更新到localStorage中\r\n            if(!this.getters.getIsLogin){\r\n                localStorage.setItem(\"cartlist\",JSON.stringify(state.cartList));\r\n            }\r\n        }, \r\n        // 删除\r\n        delProduct(state,cid){\r\n            state.cartList.forEach((e,i,arr)=>{\r\n                if(e.cid==cid){\r\n                    arr.splice(i,1);\r\n                }\r\n            });         \r\n            // 判断是否需要更新到localStorage中\r\n            if(!this.getters.getIsLogin){\r\n                localStorage.setItem(\"cartlist\",JSON.stringify(state.cartList));\r\n            }\r\n        },\r\n        setAllCheck(state,bool){\r\n            state.checkStatus=state.checkStatus.map(e=>bool);\r\n            localStorage.setItem(\"checkStatus\",JSON.stringify(state.checkStatus));\r\n        },\r\n        // \r\n        changeStatus(state,cid){\r\n            var temp=state.checkStatus.map(e=>e);\r\n            for (const key in temp) {\r\n                if (key==cid) {\r\n                    temp[cid]=!temp[cid];\r\n                }\r\n            }\r\n            state.checkStatus=temp;\r\n            localStorage.setItem(\"checkStatus\",JSON.stringify(temp));\r\n        },\r\n        delStatus(state,cid){\r\n            var temp=state.checkStatus.map(e=>e);\r\n            for (const key in temp) {\r\n                if (key==cid) {\r\n                    delete temp[key];  \r\n                }\r\n            }\r\n            state.checkStatus=temp;\r\n            localStorage.setItem(\"checkStatus\",JSON.stringify(temp));\r\n        }\r\n    },\r\n    actions:{\r\n        // 初始化state\r\n        async cartInit(context){\r\n            // 判断是否是登录状态 如果localStorage中有数据，合并\r\n            // console.log(this.getters.getIsLogin);\r\n            if(this.getters.getIsLogin){\r\n                // 登录状态\r\n                console.log(\"购物车登录状态\");\r\n                // 将localStorage中的数据添加到数据库中\r\n                var list=JSON.parse(localStorage.getItem(\"cartlist\")) || [];\r\n                console.log(list.length);\r\n                if(list.length>0){\r\n                    console.log('localStorage中有数据');\r\n                    list=list.map(ele => {\r\n                        return (addToCart(ele));\r\n                    });\r\n                    await Promise.all(list).then((arr)=>{\r\n                        arr.forEach(ele=>{\r\n                            console.log(ele.code);\r\n                        });\r\n                        if(arr.every(ele=>ele.code==1)){\r\n                            // 插入成功 清除localStorage\r\n                            localStorage.removeItem(\"cartlist\");\r\n                            console.log(\"全部合并成功\");\r\n                        }\r\n                    })\r\n                }\r\n                // 本地无数据 直接从数据库中获取\r\n                var res= await getCart();\r\n                if(res.code==200){\r\n                   context.state.cartList=res.result; \r\n                   console.log(\"state.cartList\",context.state.cartList);   \r\n                }\r\n                return;\r\n            }\r\n                // 非登录状态 从webStorage中取\r\n            context.state.cartList=JSON.parse(localStorage.getItem(\"cartlist\")) || [];\r\n            // console.log(\"state.count\",context.getters.getCount); \r\n        },\r\n        // 购物车增加商品\r\n        async addCart(context,product){\r\n            // 判断是否是登录状态\r\n            if(this.getters.getIsLogin){\r\n                //加入数据库\r\n                var res= await addToCart(product);\r\n                if(res.code==1){\r\n                    // 添加成功\r\n                    // 将商品信息更新到state中\r\n                    context.commit(\"addCartList\",product);\r\n                }\r\n            }else{\r\n                // 更新到localStorage中\r\n                context.commit(\"addCartList\",product);\r\n            }   \r\n            \r\n          \r\n        },\r\n        // 修改某个购物车商品\r\n        async changeCart(context,obj){\r\n            // 判断是否是登录状态\r\n            if(this.getters.getIsLogin){\r\n                // 更新数据库购物车表\r\n                var res=await updateCart(obj);\r\n                if(res.code==1){\r\n                    console.log(\"商品修改成功\");\r\n                    context.commit(\"setCartList\",obj);\r\n                }\r\n                return;\r\n            }\r\n            context.commit(\"setCartList\",obj);\r\n        },\r\n        // 删除某个商品\r\n        async del(context,obj){\r\n            // 判断是否是登录状态\r\n            if(this.getters.getIsLogin){\r\n                // 更新数据库购物车表\r\n                console.log(\"即将删除\");\r\n                var res=await delCartProduct({cid:obj.cid});\r\n                if(res.code==1){\r\n                    console.log(\"商品删除成功\");\r\n                    context.commit(\"delProduct\",obj.cid);\r\n                    context.commit(\"delStatus\",obj.cid);\r\n                }\r\n                return;\r\n            }\r\n            context.commit(\"delProduct\",obj.cid);\r\n            context.commit(\"delStatus\",obj.cid);\r\n        },\r\n        // 购物车勾选状态初始化\r\n        checkedInit({state,commit}){\r\n            var temp=[];\r\n                for (const p of state.cartList) {\r\n                    temp[p.cid]=true;\r\n                }\r\n            if(localStorage.getItem(\"checkStatus\")!==null){\r\n                var checkStatus=JSON.parse(localStorage.getItem(\"checkStatus\"));\r\n                for (const c in checkStatus) {\r\n                    if(checkStatus[c]==false && (temp[c]!==undefined)){\r\n                        temp[c]=false;\r\n                    }\r\n                }\r\n                \r\n            }\r\n            state.checkStatus=temp;\r\n        },\r\n        \r\n    }\r\n}"]}]}