{"remainingRequest":"G:\\前端资料备份\\项目\\lwy_git\\lwy\\lwy_vue\\node_modules\\babel-loader\\lib\\index.js!G:\\前端资料备份\\项目\\lwy_git\\lwy\\lwy_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!G:\\前端资料备份\\项目\\lwy_git\\lwy\\lwy_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\前端资料备份\\项目\\lwy_git\\lwy\\lwy_vue\\src\\views\\Details.vue?vue&type=script&lang=js&","dependencies":[{"path":"G:\\前端资料备份\\项目\\lwy_git\\lwy\\lwy_vue\\src\\views\\Details.vue","mtime":1570117373786},{"path":"G:\\前端资料备份\\项目\\lwy_git\\lwy\\lwy_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1568903608807},{"path":"G:\\前端资料备份\\项目\\lwy_git\\lwy\\lwy_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1568903607355},{"path":"G:\\前端资料备份\\项目\\lwy_git\\lwy\\lwy_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1568903608807},{"path":"G:\\前端资料备份\\项目\\lwy_git\\lwy\\lwy_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1568903643169}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"G:\\\\\\u524D\\u7AEF\\u8D44\\u6599\\u5907\\u4EFD\\\\\\u9879\\u76EE\\\\lwy_git\\\\lwy\\\\lwy_vue\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      enter: false,\n      bgImg: {\n        bgImgClass: false\n      },\n      product: {\n        price: 0\n      },\n      pics: [{\n        md: 'img/detail/md1.jpg',\n        sm: 'img/detail/sm1.jpg',\n        lg: 'img/detail/lg1.jpg'\n      }],\n      specs: [],\n      imgUrl: \"http://127.0.0.1:5050/\",\n      // 判断是选中的哪一张小图片\n      i: 0,\n      // 选中的规格\n      specIndex: 0,\n      // 判断选中的颜色\n      colorIndex: -1,\n      // 详情的导航部分 判断点击的是哪个部分\n      detailNavIndex: 0,\n      // 礼物详情的模拟数据\n      detailsImages: [\"http://127.0.0.1:5050/img/detail/1.jpg\", \"http://127.0.0.1:5050/img/detail/2.jpg\", \"http://127.0.0.1:5050/img/detail/3.jpg\", \"http://127.0.0.1:5050/img/detail/4.jpg\", \"http://127.0.0.1:5050/img/detail/5.jpg\", \"http://127.0.0.1:5050/img/detail/5.jpg\", \"http://127.0.0.1:5050/img/detail/6.jpg\"],\n      navOffsetTop: 0,\n      scrollTop: 0,\n      // 猜你喜欢的模拟图片数据\n      guessList: [\"img/detail/guessULike/1.jpg\", \"img/detail/guessULike/2.jpg\", \"img/detail/guessULike/3.jpg\", \"img/detail/guessULike/5.jpg\", \"img/detail/guessULike/2.jpg\", \"img/detail/guessULike/3.jpg\", \"img/detail/guessULike/5.jpg\", \"img/detail/guessULike/2.jpg\"],\n      times: 0,\n      times2: 0,\n      guessClass: {\n        transition: true\n      },\n      // 定时器timer\n      timer: 0\n    };\n  },\n  props: {\n    pid: {\n      default: 0\n    }\n  },\n  created: function created() {\n    // console.log(this.pid);\n    this.loadMore();\n    this.guessScroll();\n  },\n  mounted: function mounted() {\n    // 获取礼物详情 规格参数....导航栏距离页面顶部的距离\n    this.navOffsetTop = document.getElementById(\"detailNav\").offsetTop; // this.navOffsetTop=top;\n    // console.log('距离顶部距离'+this.navOffsetTop);\n    // 控制轮播指示器 鼠标滑过边框变红的样式数组初始化\n  },\n  methods: {\n    // 点击立即购买 将商品添加到购物车 并跳转到购物车\n    goCart: function goCart() {\n      var _this = this;\n\n      if (this.colorIndex == -1) {\n        alert(\"请选择规格！！！\");\n        return;\n      } // 判断用户是否是登录状态\n\n\n      _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var res, cartProduct, k, products, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, p, addCartRes;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.axios.get('user/isLogin');\n\n              case 2:\n                res = _context.sent;\n                cartProduct = {\n                  pid: _this.product.pid,\n                  pic: _this.pics[_this.colorIndex].sm,\n                  title: _this.product.title,\n                  spec: _this.specs[_this.specIndex].spec,\n                  price: _this.product.price,\n                  is_spot: _this.pics[_this.colorIndex]['is_spot'],\n                  count: 1\n                };\n\n                if (!(res.data.code == -1)) {\n                  _context.next = 31;\n                  break;\n                }\n\n                //  若未登录 将购物车信息保存到客户端\n                k = 0;\n                products = JSON.parse(localStorage.getItem(\"cartProducts\"));\n                _iteratorNormalCompletion = true;\n                _didIteratorError = false;\n                _iteratorError = undefined;\n                _context.prev = 10;\n\n                for (_iterator = products[Symbol.iterator](); !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                  p = _step.value;\n\n                  // 查看是否已经有此商品\n                  if (p.pid == cartProduct.pid) {\n                    p.count += 1;\n                  } else {\n                    k += 1;\n                  }\n                }\n\n                _context.next = 18;\n                break;\n\n              case 14:\n                _context.prev = 14;\n                _context.t0 = _context[\"catch\"](10);\n                _didIteratorError = true;\n                _iteratorError = _context.t0;\n\n              case 18:\n                _context.prev = 18;\n                _context.prev = 19;\n\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                  _iterator.return();\n                }\n\n              case 21:\n                _context.prev = 21;\n\n                if (!_didIteratorError) {\n                  _context.next = 24;\n                  break;\n                }\n\n                throw _iteratorError;\n\n              case 24:\n                return _context.finish(21);\n\n              case 25:\n                return _context.finish(18);\n\n              case 26:\n                if (k == products.length) {\n                  products.push(cartProduct);\n                }\n\n                localStorage.setItem(\"cartProducts\", JSON.stringify(products));\n                console.log(localStorage.getItem(\"cartProducts\"));\n                _context.next = 35;\n                break;\n\n              case 31:\n                _context.next = 33;\n                return _this.axios.get('cart/addCart', {\n                  params: cartProduct\n                });\n\n              case 33:\n                addCartRes = _context.sent;\n\n                if (addCartRes.data.code == 1) {\n                  console.log(\"商品\");\n                }\n\n              case 35:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[10, 14, 18, 26], [19,, 21, 25]]);\n      }))();\n    },\n    // 鼠标离开 重新开始轮播\n    startScroll: function startScroll(e) {\n      if (e.target.nodeName == \"A\") {\n        this.guessScroll(); //  console.log(\"鼠标离开\"+this.times);\n      }\n    },\n    // 鼠标滑过指示器 边框变红 轮播图滑动到响应的页数\n    scrollDire: function scrollDire(e) {\n      if (e.target.nodeName == \"A\") {\n        // console.log(e.target.dataset.i);\n        var i = e.target.dataset.i; // 变为选中的样式\n\n        this.times = i * 1;\n        clearInterval(this.timer);\n      }\n    },\n    // 猜你喜欢的自动轮播\n    guessScroll: function guessScroll() {\n      var _this2 = this;\n\n      this.timer = setInterval(function () {\n        // console.log(\"times\"+this.times);\n        _this2.times += 1;\n        _this2.guessClass.transition = true;\n\n        if (_this2.times > _this2.guessList.length % 5 + 1) {}\n\n        if (_this2.times > _this2.guessList.length) {\n          _this2.guessClass.transition = false;\n          _this2.times = 0;\n        }\n      }, 2000);\n    },\n    // 滚动到对应的内容\n    toOwn: function toOwn(e) {\n      if (e.target.nodeName == \"A\") {\n        var thisA = e.target; // 点击文字变红\n\n        this.detailNavIndex = e.target.dataset.i; // 滚动到对应的内容\n\n        var elem = document.getElementById(thisA.dataset.id);\n        var dist = this.scrollTop - elem.offsetTop;\n\n        if (thisA.dataset.i == 0) {\n          if (dist > 0) {\n            this.scrollToDetail(dist);\n          }\n        } else {\n          if (thisA.dataset.i == 1) {\n            if (this.scrollTop > this.navOffsetTop) {\n              dist += 66;\n            } else {\n              dist += 66 * 2;\n            }\n\n            console.log(this.scrollTop + \"elem.offsetTop:\" + elem.offsetTop + \"  滚动的距离\" + dist);\n            this.scrollToDetail(dist);\n          }\n        }\n      }\n    },\n    scrollToDetail: function scrollToDetail(dist) {\n      // 总距离 dist\n      // 总步数\n      var steps = 50; // 总时间\n\n      var dura = 500; // 每步走多长\n\n      var step = dist / steps; // 每步走多长时间\n\n      var interval = dura / steps;\n      var timer = setInterval(function () {\n        window.scrollBy(0, -step);\n        steps--;\n\n        if (steps == 0) {\n          clearInterval(timer);\n        }\n      });\n    },\n    scroll: function scroll(t) {\n      // 从子组件中传过来的值\n      this.scrollTop = t;\n      console.log(\"scrollTop\" + this.scrollTop); //   console.log('距离顶部距离'+this.navOffsetTop);\n      // 如果页面滚动到礼物详情内容区域 相应的导航字变红\n\n      if (this.scrollTop >= 837 && this.scrollTop < 9408) {\n        this.detailNavIndex = 0;\n      } else if (this.scrollTop >= 9408 && this.scrollTop < 9676) {\n        // 如果页面滚动到规格参数内容区域 相应的导航字变红\n        this.detailNavIndex = 1;\n      } else {\n        this.detailNavIndex = 3;\n      }\n    },\n    loadMore: function loadMore() {\n      var _this3 = this;\n\n      _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var res, obj, p;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _this3.axios.get('detail/getPro', {\n                  params: {\n                    pid: _this3.pid\n                  }\n                });\n\n              case 2:\n                res = _context2.sent;\n                // console.log(res.data);\n                obj = res.data; // this.product=obj.product;\n\n                for (p in obj.product) {\n                  // this.$set相当于手动去将this.product处理成一个响应式的属性\n                  _this3.$set(_this3.product, p, obj.product[p]);\n                }\n\n                _this3.pics = obj.pics;\n                _this3.specs = obj.specs; // console.log(this.product,this.pics,this.specs);\n\n                console.log(_this3.pics);\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    // 选择规格\n    specClick: function specClick(index) {\n      this.specIndex = index;\n    },\n    //选择颜色事件\n    changeColor: function changeColor(e) {\n      if (e.target.nodeName == \"A\") {\n        this.colorIndex = e.target.dataset.ci; // 对应的选中相应颜色的小图片与大图片\n\n        this.i = this.colorIndex;\n      }\n    },\n    // 鼠标移到哪个小图片 哪个小图片就加上红色边框 并且切换对应的大图片\n    changeImg: function changeImg(e) {\n      if (e.target.nodeName == \"IMG\") {\n        var i = e.target.dataset.i; //当前选中的是i图片\n\n        this.i = i;\n      }\n    },\n    bgImgHandle: function bgImgHandle() {\n      var _this4 = this;\n\n      _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return _this4.axios.get('user/isLogin');\n\n              case 2:\n                res = _context3.sent;\n                console.log(res.data);\n\n                if (res.data.code == -1) {\n                  alert(\"请先登录！登录后才能收藏\");\n                } else {\n                  _this4.bgImg.bgImgClass = !_this4.bgImg.bgImgClass;\n                }\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    }\n  },\n  watch: {\n    // 一旦浏览器中的地址改变 刷新网页 重新发送ajax请求\n    $route: function $route() {\n      this.loadMore();\n    }\n  },\n  computed: {}\n};",{"version":3,"sources":["Details.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div>\r\n        <my-header></my-header>\r\n        <div id=\"page_detail\">\r\n            <bread :breadName=\"['BeeFo小唱机']\"></bread>\r\n            <div class=\"goods_info\">\r\n                <div class=\"center w1200 d-flex\">\r\n                    <div class=\"images d-flex\">\r\n                        <!-- 小图 -->\r\n                        <ul class=\"d-flex\" @mouseover=\"changeImg\">\r\n                            <li v-for=\"(item,index) of pics\" :key=\"index\" >\r\n                                <img :src=\"imgUrl+item.sm\" alt=\"\"  :class=\"i==index?'borderRed':''\" :data-i=\"index\">\r\n                            </li>\r\n                        </ul>\r\n                        <!-- 中图 -->\r\n                        <div class=\"mdImg relative\">\r\n                            <img :src=\"imgUrl+pics[i].md\" alt=\"\">\r\n                            <div v-show=\"enter\" class=\"smMask\"></div>\r\n                            <div class=\"Mask\" @mouseover=\"enter=!enter\" @mouseout=\"enter=!enter\"></div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"goods_attr\">\r\n                        <h2 v-text=\"product.title\"></h2>\r\n                        <h3 class=\"subtitle\" v-text=\"product.subtitle\"></h3>\r\n                        <div class=\"good_price d-flex\">\r\n                            <span>{{product.price.toFixed(2)}}元</span>\r\n                            <span class=\"color666\" v-text=\"pics[i].is_spot?'有现货':'暂时缺货'\"></span>\r\n                        </div>\r\n                        <div class=\"specs\">\r\n                            <div>\r\n                                <span class=\"block color666\">选择规格:</span>\r\n                                <!-- 规格与浏览器中参数id值一致时 说明是选中状态 -->\r\n                                <router-link @click.native=\"specClick(index)\" :to=\"/Details/+item.pid\" v-for=\"(item,index) of specs\" :key=\"index\" class=\"block option\" :class=\"item.pid==pid?'optionSelected':''\"  v-text=\"item.spec\"></router-link>\r\n                            </div>\r\n                            <div class=\"colors\" @click=\"changeColor\">\r\n                                <p>\r\n                                  <span class=\"block color666\">礼物颜色:</span>  \r\n                                </p>\r\n                                <router-link to=\"\" v-for=\"(item,index) of pics\" :key=\"index\"  :data-ci=\"index\" class=\"block option\" :class=\"colorIndex==index?'colorSelected':''\" v-text=\"item.color\"></router-link>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"buy\">\r\n                            <router-link to=\"\" @click.native=\"goCart\">立即购买</router-link>\r\n                            <a href=\"javascript:;\" class=\"sc\" @click=\"bgImgHandle\">\r\n                                <i :class=\"bgImg\"></i>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div id=\"detailNav\" :class=\"scrollTop>navOffsetTop && navOffsetTop!=0?'fixed':''\" class=\"details_nav\">\r\n                <div class=\"w1200\">\r\n                    <ul class=\"w1200 d-flex\"  @click=\"toOwn\">\r\n                        <li>\r\n                           <a href=\"javascript:;\" data-id=\"detailContent\" :class=\"detailNavIndex==0?'active':''\" data-i=\"0\">礼物详情</a> \r\n                        </li>\r\n                        <li>\r\n                            <a data-id=\"detail_params\" href=\"javascript:;\" :class=\"detailNavIndex==1?'active':''\"  data-i=\"1\">规格参数</a> \r\n                        </li>\r\n                        <li>\r\n                            <a href=\"javascript:;\" :class=\"detailNavIndex==2?'active':''\"  data-i=\"2\">视频晒单(5)</a> \r\n                        </li>\r\n                        <li>\r\n                            <a href=\"javascript:;\" :class=\"detailNavIndex==3?'active':''\"  data-i=\"3\">咨询(5)</a>\r\n                        </li>\r\n                    </ul>\r\n                    <div class=\"service\" v-show=\"scrollTop>navOffsetTop|| navOffsetTop==0\">\r\n                        <span>需要帮助？</span>\r\n                        <router-link to=\"\">QQ在线交谈</router-link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"bg_f5f5f5\" style=\"height:20px\"></div>\r\n            <div class=\"bg_f5f5f5\" id=\"detailContent\">\r\n                <div class=\" w1200 bg_fff\">\r\n                    <img v-for=\"(item,index) of detailsImages\" :key=\"index\" :src=\"item\" alt=\"\">\r\n                </div>\r\n                <div id=\"detail_params\">规格参数</div>\r\n                <div class=\"detailP_details w1200\"></div>\r\n                <div id=\"detailParams\">\r\n                </div>\r\n                <div id=\"detailComment\"></div>\r\n                <div id=\"detailRequest\"></div>\r\n                <!-- 猜你喜欢 -->\r\n                <div id=\"guess_title\">猜你喜欢</div>\r\n                <div class=\"guessULike w1200\">\r\n                    <ul :class=\"guessClass\" :style=\"{'margin-left':-243*times+'px',width:guessList.length*228+(guessList.length-1)*15+'px'}\">\r\n                        <li v-for=\"(item,index) of guessList\" :key=\"index\">\r\n                            <img :src=\"imgUrl+guessList[index]\" alt=\"\">\r\n                            <p>魔法小唱机</p>\r\n                            <p>¥399.0</p>\r\n                        </li>\r\n                    </ul>\r\n                    <!-- 备用ul -->\r\n                    <ul :class=\"guessClass\" :style=\"{width:guessList.length*228+(guessList.length-1)*15+'px'}\">\r\n                        <li v-for=\"(item,index) of guessList\" :key=\"index\">\r\n                            <img :src=\"imgUrl+guessList[index]\" alt=\"\">\r\n                            <p>魔法小唱机</p>\r\n                            <p>¥399.0</p>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <!-- 指示器 -->\r\n                <div class=\"directors\" @mouseover=\"scrollDire\" @mouseout=\"startScroll\">\r\n                    <a href=\"javacsript:;\" v-for=\"i of guessList.length%5+1\" :key=\"i\" :data-i=\"i-1\" :class=\"i-1==times ||(i==guessList.length%5 && times>3)?'borderRed':''\"></a>\r\n                </div>\r\n            </div>\r\n            <!-- 子组件将scrollTop传给父组件 -->\r\n            <tool-bars @scroll=\"scroll\"></tool-bars>   \r\n        </div>\r\n        <my-footer></my-footer>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    data(){\r\n        return{\r\n            enter:false,\r\n            bgImg:{\r\n               bgImgClass:false \r\n            },\r\n            product:{price:0},\r\n            pics:[{md:'img/detail/md1.jpg',sm:'img/detail/sm1.jpg',lg:'img/detail/lg1.jpg'}],\r\n            specs:[] ,\r\n            imgUrl:\"http://127.0.0.1:5050/\",\r\n            // 判断是选中的哪一张小图片\r\n            i:0,\r\n            // 选中的规格\r\n            specIndex:0,\r\n            // 判断选中的颜色\r\n            colorIndex:-1,\r\n            // 详情的导航部分 判断点击的是哪个部分\r\n            detailNavIndex:0,\r\n            // 礼物详情的模拟数据\r\n            detailsImages:[\"http://127.0.0.1:5050/img/detail/1.jpg\",\"http://127.0.0.1:5050/img/detail/2.jpg\",\"http://127.0.0.1:5050/img/detail/3.jpg\",\"http://127.0.0.1:5050/img/detail/4.jpg\",\"http://127.0.0.1:5050/img/detail/5.jpg\",\"http://127.0.0.1:5050/img/detail/5.jpg\",\"http://127.0.0.1:5050/img/detail/6.jpg\"],\r\n            navOffsetTop:0,\r\n            scrollTop:0,\r\n            // 猜你喜欢的模拟图片数据\r\n            guessList:[\"img/detail/guessULike/1.jpg\",\"img/detail/guessULike/2.jpg\",\"img/detail/guessULike/3.jpg\",\"img/detail/guessULike/5.jpg\",\"img/detail/guessULike/2.jpg\",\"img/detail/guessULike/3.jpg\",\"img/detail/guessULike/5.jpg\",\"img/detail/guessULike/2.jpg\"],\r\n            times:0,\r\n            times2:0,\r\n            guessClass:{transition:true},\r\n            // 定时器timer\r\n            timer:0\r\n        }\r\n    },\r\n    props:{pid:{default:0}},\r\n    created(){\r\n        // console.log(this.pid);\r\n        this.loadMore();    \r\n        this.guessScroll();\r\n    },\r\n    mounted(){\r\n        // 获取礼物详情 规格参数....导航栏距离页面顶部的距离\r\n        this.navOffsetTop=document.getElementById(\"detailNav\").offsetTop;\r\n        // this.navOffsetTop=top;\r\n        // console.log('距离顶部距离'+this.navOffsetTop);\r\n        // 控制轮播指示器 鼠标滑过边框变红的样式数组初始化\r\n    },\r\n    methods:{\r\n        // 点击立即购买 将商品添加到购物车 并跳转到购物车\r\n        goCart(){\r\n            if(this.colorIndex==-1){\r\n                alert(\"请选择规格！！！\");\r\n                return;\r\n            }\r\n        // 判断用户是否是登录状态\r\n        (async ()=>{\r\n            var res=await this.axios.get('user/isLogin');\r\n            var cartProduct={\r\n                pid:this.product.pid,\r\n                pic:this.pics[this.colorIndex].sm,\r\n                title:this.product.title,\r\n                spec:this.specs[this.specIndex].spec,\r\n                price:this.product.price,\r\n                is_spot:this.pics[this.colorIndex]['is_spot'],\r\n                count:1\r\n            };   \r\n            if(res.data.code==-1){\r\n                //  若未登录 将购物车信息保存到客户端\r\n                let k=0;\r\n                let products=JSON.parse(localStorage.getItem(\"cartProducts\"));\r\n                for (const p of products) {\r\n                    // 查看是否已经有此商品\r\n                   if(p.pid==cartProduct.pid) {\r\n                       p.count+=1;\r\n                   }else{\r\n                       k+=1;\r\n                   }\r\n                }\r\n                if(k==products.length){\r\n                    products.push(cartProduct);\r\n                }\r\n                localStorage.setItem(\"cartProducts\",JSON.stringify(products));\r\n                console.log(localStorage.getItem(\"cartProducts\"));\r\n            }else{\r\n                // 将商品信息插入到购物车表\r\n                var addCartRes=await this.axios.get('cart/addCart',{\r\n                    params:cartProduct\r\n                });\r\n                if(addCartRes.data.code==1){\r\n                    console.log(\"商品\");\r\n                }\r\n            }  \r\n        })();\r\n\r\n        },\r\n        // 鼠标离开 重新开始轮播\r\n        startScroll(e){\r\n             if(e.target.nodeName==\"A\"){\r\n                 this. guessScroll();\r\n                //  console.log(\"鼠标离开\"+this.times);\r\n             }\r\n        },\r\n        // 鼠标滑过指示器 边框变红 轮播图滑动到响应的页数\r\n        scrollDire(e){\r\n            if(e.target.nodeName==\"A\"){\r\n                // console.log(e.target.dataset.i);\r\n                var i=e.target.dataset.i;\r\n                // 变为选中的样式\r\n                this.times=i*1;\r\n                clearInterval(this.timer);\r\n            }\r\n        },\r\n        // 猜你喜欢的自动轮播\r\n        guessScroll(){\r\n            this.timer=setInterval(()=>{\r\n                // console.log(\"times\"+this.times);\r\n                this.times+=1;\r\n                this.guessClass.transition=true;\r\n                if(this.times>(this.guessList.length%5+1)){\r\n                    \r\n                }\r\n                if(this.times>this.guessList.length){\r\n                    this.guessClass.transition=false;\r\n                    this.times=0;\r\n                }\r\n            },2000);\r\n        },\r\n        // 滚动到对应的内容\r\n        toOwn(e){\r\n            if(e.target.nodeName==\"A\"){\r\n                var thisA=e.target;\r\n                // 点击文字变红\r\n                this.detailNavIndex=e.target.dataset.i;\r\n                // 滚动到对应的内容\r\n                var elem=document.getElementById(thisA.dataset.id);\r\n                var dist=this.scrollTop-elem.offsetTop;\r\n                if(thisA.dataset.i==0){\r\n                    if(dist>0){\r\n                        this.scrollToDetail(dist);\r\n                    }\r\n                }else{\r\n                    if(thisA.dataset.i==1){\r\n                        if(this.scrollTop>this.navOffsetTop){\r\n                            dist+=66;\r\n                        }else{\r\n                            dist+=66*2;\r\n                            \r\n                        }      \r\n                        console.log(this.scrollTop+\"elem.offsetTop:\"+elem.offsetTop+\"  滚动的距离\"+dist); \r\n                            this.scrollToDetail(dist);           \r\n                    }\r\n                }\r\n            }\r\n        },\r\n        scrollToDetail(dist){\r\n            // 总距离 dist\r\n            // 总步数\r\n            var steps=50;\r\n            // 总时间\r\n            var dura=500;\r\n            // 每步走多长\r\n            var step= dist/steps;\r\n            // 每步走多长时间\r\n            var interval=dura/steps;\r\n            var timer=setInterval(()=>{\r\n                window.scrollBy(0,-step);\r\n                steps--;\r\n                if(steps==0){\r\n                    clearInterval(timer);\r\n                }\r\n            });\r\n        },\r\n        scroll(t){\r\n            // 从子组件中传过来的值\r\n          this.scrollTop=t; \r\n          console.log(\"scrollTop\"+this.scrollTop); \r\n        //   console.log('距离顶部距离'+this.navOffsetTop);\r\n            // 如果页面滚动到礼物详情内容区域 相应的导航字变红\r\n            if(this.scrollTop>=837 && this.scrollTop<9408){\r\n            this.detailNavIndex=0;  \r\n            }else if(this.scrollTop>=9408 && this.scrollTop<9676){\r\n                // 如果页面滚动到规格参数内容区域 相应的导航字变红\r\n                this.detailNavIndex=1;\r\n            }else{\r\n                this.detailNavIndex=3;\r\n            }\r\n            \r\n        },\r\n        loadMore(){\r\n            (async ()=>{\r\n                var res=await this.axios.get('detail/getPro',{\r\n                    params:{\r\n                        pid:this.pid\r\n                    }\r\n                });\r\n                // console.log(res.data);\r\n                var obj=res.data;\r\n                // this.product=obj.product;\r\n                for (const p in obj.product) {\r\n                // this.$set相当于手动去将this.product处理成一个响应式的属性\r\n                this.$set(this.product,p,obj.product[p]);\r\n                }\r\n                this.pics=obj.pics;\r\n                this.specs=obj.specs;\r\n                // console.log(this.product,this.pics,this.specs);\r\n                console.log(this.pics);\r\n            })();\r\n        },\r\n        // 选择规格\r\n        specClick(index){\r\n            this.specIndex=index;\r\n        },\r\n        //选择颜色事件\r\n        changeColor(e){\r\n            if(e.target.nodeName==\"A\"){\r\n                this.colorIndex=e.target.dataset.ci;\r\n                // 对应的选中相应颜色的小图片与大图片\r\n                this.i=this.colorIndex;\r\n            }\r\n        },\r\n        // 鼠标移到哪个小图片 哪个小图片就加上红色边框 并且切换对应的大图片\r\n        changeImg(e){\r\n            if(e.target.nodeName==\"IMG\"){\r\n                var i=e.target.dataset.i;\r\n                //当前选中的是i图片\r\n                 this.i=i; \r\n            }\r\n            \r\n\r\n        },\r\n        bgImgHandle(){\r\n            (async ()=>{\r\n                var res=await this.axios.get('user/isLogin');\r\n                console.log(res.data);\r\n                if(res.data.code==-1){\r\n                    alert(\"请先登录！登录后才能收藏\");\r\n                }else{\r\n                    this.bgImg.bgImgClass=!this.bgImg.bgImgClass; \r\n                }\r\n            })();\r\n           \r\n        }\r\n    },\r\n    watch:{\r\n        // 一旦浏览器中的地址改变 刷新网页 重新发送ajax请求\r\n        $route(){\r\n            this.loadMore();\r\n        }\r\n    },\r\n    computed:{\r\n        \r\n    }\r\n\r\n}\r\n</script>\r\n<style scoped>\r\n    @import url(../assets/css/details.css);\r\n</style>\r\n"],"sourceRoot":"src/views"}]}