{"remainingRequest":"D:\\WEB\\lx\\vue\\project\\lwy\\lwy_vue\\node_modules\\babel-loader\\lib\\index.js!D:\\WEB\\lx\\vue\\project\\lwy\\lwy_vue\\src\\store\\cart.js","dependencies":[{"path":"D:\\WEB\\lx\\vue\\project\\lwy\\lwy_vue\\src\\store\\cart.js","mtime":1591513586884},{"path":"D:\\WEB\\lx\\vue\\project\\lwy\\lwy_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591153665092},{"path":"D:\\WEB\\lx\\vue\\project\\lwy\\lwy_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1591153664766}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"D:\\\\WEB\\\\lx\\\\vue\\\\project\\\\lwy\\\\lwy_vue\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/web.dom.iterable\";\nimport axios from 'axios';\nimport apis from \"./api\";\nimport QS from 'qs';\nexport default {\n  state: {\n    cartList: [],\n    // [cid:false] 关联数组\n    checkStatus: [] // 数量也在本地存一份\n\n  },\n  getters: {\n    getCartList: function getCartList(state) {\n      return state.cartList;\n    },\n    // 购物车商品总数量\n    getCount: function getCount(state) {\n      return state.cartList.reduce(function (prev, v) {\n        return prev + parseInt(v.count);\n      }, 0);\n    },\n    getCheckStatus: function getCheckStatus(state) {\n      return state.checkStatus;\n    },\n    getIsAllCheck: function getIsAllCheck(state) {\n      var sum = 0,\n          trueC = 0; // var checks=this.getters.getCheckStatus();\n\n      for (var _c in state.checkStatus) {\n        sum++;\n\n        if (state.checkStatus[_c] == true) {\n          trueC++;\n        }\n      }\n\n      return sum == trueC;\n    },\n    getSelectCount: function getSelectCount(state) {\n      var c = 0;\n\n      var _loop = function _loop(key) {\n        if (state.checkStatus[key] == true) {\n          state.cartList.forEach(function (e) {\n            if (e.cid == key) {\n              c += e.count;\n            }\n          });\n        }\n      };\n\n      for (var key in state.checkStatus) {\n        _loop(key);\n      }\n\n      return c;\n    },\n    getSelectTotal: function getSelectTotal(state) {\n      var total = 0;\n\n      var _loop2 = function _loop2(key) {\n        if (state.checkStatus[key] == true) {\n          state.cartList.forEach(function (e) {\n            if (e.cid == key) {\n              c += e.price * e.count;\n            }\n          });\n        }\n      };\n\n      for (var key in state.checkStatus) {\n        _loop2(key);\n      }\n\n      return c;\n    }\n  },\n  mutations: {\n    // state.chosenList中有商品的checked发生改变\n    updateChecked: function updateChecked(state, obj) {\n      for (var _c2 in state.checkStatus) {\n        if (_c2 == obj.cid) {\n          state.checkStatus[_c2] = obj.checked;\n        }\n      }\n\n      localStorage.setItem(\"chosenList\", JSON.stringify(state.chosenList));\n    },\n    // 删除取消勾选的商品\n    delChecked: function delChecked(state, cid) {\n      state.chosenList = state.chosenList.filter(function (e) {\n        e.cid != cid;\n      }); // 将更改存到localStorage中\n\n      localStorage.setItem(\"chosenList\", JSON.stringify(state.chosenList));\n    },\n    // 增加商品\n    addCartList: function addCartList(state, product) {\n      // 更新到state中  没有商品数据，直接加入，否则遍历比对，相同的商品count+1\n      var arr = apis.compareAdd(state.cartList, product);\n      state.cartList = arr; //  判断是否需要更新到localStorage中\n\n      if (!this.getters.getIsLogin) {\n        localStorage.setItem(\"cartlist\", JSON.stringify(arr));\n      }\n    },\n    // 修改\n    setCartList: function setCartList(state, obj) {\n      console.log(\"修改前\" + state.cartList);\n      state.cartList.forEach(function (ele) {\n        if (ele.cid == obj.cid) {\n          ele.count = obj.count;\n        }\n      });\n      console.log(\"修改后\" + state.cartList); // 判断是否需要更新到localStorage中\n\n      if (!this.getters.getIsLogin) {\n        localStorage.setItem(\"cartlist\", JSON.stringify(state.cartList));\n      }\n    },\n    // 删除\n    delProduct: function delProduct(state, i) {\n      // 更新总数量\n      state.cartList.splice(i, 1); // 判断是否需要更新到localStorage中\n\n      if (!this.getters.getIsLogin) {\n        localStorage.setItem(\"cartlist\", JSON.stringify(state.cartList));\n      }\n    },\n    setAllCheck: function setAllCheck(state, bool) {\n      state.checkStatus = state.checkStatus.map(function (e) {\n        return bool;\n      });\n      localStorage.setItem(\"checkStatus\", JSON.stringify(state.checkStatus));\n    },\n    // \n    changeStatus: function changeStatus(state, cid) {\n      var temp = state.checkStatus.map(function (e) {\n        return e;\n      });\n\n      for (var key in temp) {\n        if (key == cid) {\n          temp[cid] = !temp[cid];\n        }\n      }\n\n      state.checkStatus = temp;\n      localStorage.setItem(\"checkStatus\", JSON.stringify(temp));\n    }\n  },\n  actions: {\n    // 初始化state\n    cartInit: function () {\n      var _cartInit = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(context) {\n        var list, res;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!this.getters.getIsLogin) {\n                  _context.next = 15;\n                  break;\n                }\n\n                // 登录状态\n                console.log(\"购物车登录状态\"); // 将localStorage中的数据添加到数据库中\n\n                list = JSON.parse(localStorage.getItem(\"cartlist\")) || [];\n                console.log(list.length);\n\n                if (!(list.length > 0)) {\n                  _context.next = 9;\n                  break;\n                }\n\n                console.log('localStorage中有数据');\n                list = list.map(function (ele) {\n                  return axios.get('cart/addCart', {\n                    params: ele\n                  });\n                });\n                _context.next = 9;\n                return Promise.all(list).then(function (arr) {\n                  arr.forEach(function (ele) {\n                    console.log(ele.data.code);\n                  });\n\n                  if (arr.every(function (ele) {\n                    return ele.data.code == 1;\n                  })) {\n                    // 插入成功 清除localStorage\n                    localStorage.removeItem(\"cartlist\");\n                    console.log(\"全部合并成功\");\n                  }\n                });\n\n              case 9:\n                _context.next = 11;\n                return axios.get(\"cart/getCart\");\n\n              case 11:\n                res = _context.sent;\n                context.state.cartList = res.data;\n                console.log(\"state.cartList\", context.state.cartList);\n                return _context.abrupt(\"return\");\n\n              case 15:\n                // 非登录状态 从webStorage中取\n                context.state.cartList = JSON.parse(localStorage.getItem(\"cartlist\")) || []; // console.log(\"state.count\",context.getters.getCount); \n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function cartInit(_x) {\n        return _cartInit.apply(this, arguments);\n      }\n\n      return cartInit;\n    }(),\n    // 购物车增加商品\n    addCart: function () {\n      var _addCart = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(context, product) {\n        var res;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!this.getters.getIsLogin) {\n                  _context2.next = 4;\n                  break;\n                }\n\n                _context2.next = 3;\n                return axios.get('cart/addCart', {\n                  params: product\n                });\n\n              case 3:\n                res = _context2.sent;\n\n              case 4:\n                // 将商品信息更新到state中\n                context.commit(\"addCartList\", product);\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function addCart(_x2, _x3) {\n        return _addCart.apply(this, arguments);\n      }\n\n      return addCart;\n    }(),\n    // 修改某个购物车商品\n    changeCart: function () {\n      var _changeCart = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(context, obj) {\n        var res;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!this.getters.getIsLogin) {\n                  _context3.next = 5;\n                  break;\n                }\n\n                _context3.next = 3;\n                return axios.get(\"cart/updateCart\", {\n                  params: obj\n                });\n\n              case 3:\n                res = _context3.sent;\n\n                if (res.data.code == 1) {\n                  console.log(\"商品修改成功\");\n                }\n\n              case 5:\n                context.commit(\"setCartList\", obj);\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function changeCart(_x4, _x5) {\n        return _changeCart.apply(this, arguments);\n      }\n\n      return changeCart;\n    }(),\n    // 删除某个商品\n    del: function () {\n      var _del = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4(context, obj) {\n        var res;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!this.getters.getIsLogin) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                // 更新数据库购物车表\n                console.log(\"即将删除\");\n                _context4.next = 4;\n                return axios.get(\"cart/delete\", {\n                  params: {\n                    cid: obj.cid\n                  }\n                });\n\n              case 4:\n                res = _context4.sent;\n\n                if (res.data.code == 1) {\n                  console.log(\"商品删除成功\");\n                }\n\n              case 6:\n                context.commit(\"delProduct\", obj.i);\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function del(_x6, _x7) {\n        return _del.apply(this, arguments);\n      }\n\n      return del;\n    }(),\n    // 购物车勾选状态初始化\n    checkedInit: function checkedInit(_ref) {\n      var state = _ref.state,\n          commit = _ref.commit;\n      var temp = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = state.cartList[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var p = _step.value;\n          temp[p.cid] = true;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      if (localStorage.getItem(\"checkStatus\") !== null) {\n        var checkStatus = JSON.parse(localStorage.getItem(\"checkStatus\"));\n\n        for (var _c3 in checkStatus) {\n          if (checkStatus[_c3] == false && temp[_c3] !== undefined) {\n            temp[_c3] = false;\n          }\n        }\n      }\n\n      state.checkStatus = temp;\n    }\n  }\n};",{"version":3,"sources":["D:\\WEB\\lx\\vue\\project\\lwy\\lwy_vue\\src\\store\\cart.js"],"names":["axios","apis","QS","state","cartList","checkStatus","getters","getCartList","getCount","reduce","prev","v","parseInt","count","getCheckStatus","getIsAllCheck","sum","trueC","c","getSelectCount","key","forEach","e","cid","getSelectTotal","total","price","mutations","updateChecked","obj","checked","localStorage","setItem","JSON","stringify","chosenList","delChecked","filter","addCartList","product","arr","compareAdd","getIsLogin","setCartList","console","log","ele","delProduct","i","splice","setAllCheck","bool","map","changeStatus","temp","actions","cartInit","context","list","parse","getItem","length","get","params","Promise","all","then","data","code","every","removeItem","res","addCart","commit","changeCart","del","checkedInit","p","undefined"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport apis from './api';\r\nimport QS from 'qs'\r\nexport default{\r\n    state:{\r\n        cartList:[],\r\n        // [cid:false] 关联数组\r\n        checkStatus: []\r\n        // 数量也在本地存一份\r\n    },\r\n    getters:{\r\n        getCartList(state){        \r\n            return state.cartList;\r\n        },\r\n        // 购物车商品总数量\r\n        getCount(state){\r\n            return state.cartList.reduce((prev,v)=>{\r\n                return prev+parseInt(v.count);\r\n            },0);\r\n        },\r\n        getCheckStatus(state){\r\n            return state.checkStatus;\r\n        },\r\n        getIsAllCheck(state){\r\n            var sum=0,trueC=0;\r\n            // var checks=this.getters.getCheckStatus();\r\n            for (const c in state.checkStatus) {\r\n                sum++;\r\n                if (state.checkStatus[c]==true) {\r\n                    trueC++;\r\n                }\r\n            }\r\n            return sum==trueC;\r\n        },\r\n        getSelectCount(state){\r\n            var c=0;\r\n            for (const key in state.checkStatus) {\r\n                if (state.checkStatus[key]==true) {\r\n                   state.cartList.forEach(e=>{\r\n                       if(e.cid==key){\r\n                           c+=e.count;\r\n                       }\r\n                   }) \r\n                }\r\n            }\r\n            return c;\r\n        },\r\n        getSelectTotal(state){\r\n            var total=0;\r\n            for (const key in state.checkStatus) {\r\n                if (state.checkStatus[key]==true) {\r\n                   state.cartList.forEach(e=>{\r\n                       if(e.cid==key){\r\n                           c+=e.price*e.count;\r\n                       }\r\n                   }) \r\n                }\r\n            }\r\n            return c;\r\n        }\r\n    },\r\n    mutations:{\r\n        // state.chosenList中有商品的checked发生改变\r\n        updateChecked(state,obj){\r\n            for (const c in state.checkStatus) {\r\n                if(c==obj.cid){\r\n                    state.checkStatus[c]=obj.checked;   \r\n                }\r\n            }\r\n            localStorage.setItem(\"chosenList\",JSON.stringify(state.chosenList));\r\n        },\r\n        // 删除取消勾选的商品\r\n        delChecked(state,cid){\r\n            state.chosenList=state.chosenList.filter(e=>{e.cid!=cid});\r\n            // 将更改存到localStorage中\r\n            localStorage.setItem(\"chosenList\",JSON.stringify(state.chosenList));\r\n        },\r\n        // 增加商品\r\n        addCartList(state,product){\r\n            // 更新到state中  没有商品数据，直接加入，否则遍历比对，相同的商品count+1\r\n            var arr=apis.compareAdd(state.cartList,product);\r\n            state.cartList=arr;          \r\n            //  判断是否需要更新到localStorage中\r\n            if(!this.getters.getIsLogin){\r\n                localStorage.setItem(\"cartlist\",JSON.stringify(arr));\r\n            }\r\n        },\r\n        // 修改\r\n        setCartList(state,obj){\r\n            console.log(\"修改前\"+state.cartList);\r\n            state.cartList.forEach(ele=>{\r\n                if(ele.cid==obj.cid){\r\n                    ele.count=obj.count;   \r\n                }\r\n            });\r\n            console.log(\"修改后\"+state.cartList);\r\n            // 判断是否需要更新到localStorage中\r\n            if(!this.getters.getIsLogin){\r\n                localStorage.setItem(\"cartlist\",JSON.stringify(state.cartList));\r\n            }\r\n        }, \r\n        // 删除\r\n        delProduct(state,i){\r\n            // 更新总数量\r\n            state.cartList.splice(i,1);\r\n            // 判断是否需要更新到localStorage中\r\n            if(!this.getters.getIsLogin){\r\n                localStorage.setItem(\"cartlist\",JSON.stringify(state.cartList));\r\n            }\r\n        },\r\n        setAllCheck(state,bool){\r\n            state.checkStatus=state.checkStatus.map(e=>bool);\r\n            localStorage.setItem(\"checkStatus\",JSON.stringify(state.checkStatus));\r\n        },\r\n        // \r\n        changeStatus(state,cid){\r\n            var temp=state.checkStatus.map(e=>e);\r\n            for (const key in temp) {\r\n                if (key==cid) {\r\n                    temp[cid]=!temp[cid];\r\n                }\r\n            }\r\n            state.checkStatus=temp;\r\n            localStorage.setItem(\"checkStatus\",JSON.stringify(temp));\r\n        }\r\n    },\r\n    actions:{\r\n        // 初始化state\r\n        async cartInit(context){\r\n            // 判断是否是登录状态 如果localStorage中有数据，合并\r\n            // console.log(this.getters.getIsLogin);\r\n            if(this.getters.getIsLogin){\r\n                // 登录状态\r\n                console.log(\"购物车登录状态\");\r\n                // 将localStorage中的数据添加到数据库中\r\n                var list=JSON.parse(localStorage.getItem(\"cartlist\")) || [];\r\n                console.log(list.length);\r\n                if(list.length>0){\r\n                    console.log('localStorage中有数据');\r\n                    list=list.map(ele => {\r\n                        return (axios.get('cart/addCart',{\r\n                            params:ele\r\n                        }));\r\n                    });\r\n                    await Promise.all(list).then((arr)=>{\r\n                        arr.forEach(ele=>{\r\n                            console.log(ele.data.code);\r\n                        });\r\n                        if(arr.every(ele=>ele.data.code==1)){\r\n                            // 插入成功 清除localStorage\r\n                            localStorage.removeItem(\"cartlist\");\r\n                            console.log(\"全部合并成功\");\r\n                        }\r\n                    })\r\n                }\r\n                // 本地无数据 直接从数据库中获取\r\n                var res= await axios.get(\"cart/getCart\");\r\n                context.state.cartList=res.data;\r\n                console.log(\"state.cartList\",context.state.cartList);\r\n                return;\r\n            }\r\n                // 非登录状态 从webStorage中取\r\n            context.state.cartList=JSON.parse(localStorage.getItem(\"cartlist\")) || [];\r\n            // console.log(\"state.count\",context.getters.getCount); \r\n        },\r\n        // 购物车增加商品\r\n        async addCart(context,product){\r\n            // 判断是否是登录状态\r\n            if(this.getters.getIsLogin){\r\n                //加入数据库\r\n                var res= await axios.get('cart/addCart',{\r\n                    params:product\r\n                });\r\n                // if(res.data.code==1){\r\n                    // 添加成功\r\n                    // }\r\n            }   \r\n            // 将商品信息更新到state中\r\n            context.commit(\"addCartList\",product);\r\n          \r\n        },\r\n        // 修改某个购物车商品\r\n        async changeCart(context,obj){\r\n            // 判断是否是登录状态\r\n            if(this.getters.getIsLogin){\r\n                // 更新数据库购物车表\r\n                var res=await axios.get(\"cart/updateCart\",{params:obj});\r\n                if(res.data.code==1){\r\n                    console.log(\"商品修改成功\");\r\n                }\r\n            }\r\n            context.commit(\"setCartList\",obj);\r\n        },\r\n        // 删除某个商品\r\n        async del(context,obj){\r\n            // 判断是否是登录状态\r\n            if(this.getters.getIsLogin){\r\n                // 更新数据库购物车表\r\n                console.log(\"即将删除\");\r\n                var res=await axios.get(\"cart/delete\",{params:{cid:obj.cid}});\r\n                if(res.data.code==1){\r\n                    console.log(\"商品删除成功\");\r\n                }\r\n            }\r\n            context.commit(\"delProduct\",obj.i);\r\n        },\r\n        // 购物车勾选状态初始化\r\n        checkedInit({state,commit}){\r\n            var temp=[];\r\n                for (const p of state.cartList) {\r\n                    temp[p.cid]=true;\r\n                }\r\n            if(localStorage.getItem(\"checkStatus\")!==null){\r\n                var checkStatus=JSON.parse(localStorage.getItem(\"checkStatus\"));\r\n                for (const c in checkStatus) {\r\n                    if(checkStatus[c]==false && (temp[c]!==undefined)){\r\n                        temp[c]=false;\r\n                    }\r\n                }\r\n            }\r\n            state.checkStatus=temp;\r\n        },\r\n        \r\n    }\r\n}"]}]}