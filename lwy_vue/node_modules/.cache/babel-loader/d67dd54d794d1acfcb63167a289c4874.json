{"remainingRequest":"D:\\Web1905\\项目\\lwy\\lwy_vue\\node_modules\\babel-loader\\lib\\index.js!D:\\Web1905\\项目\\lwy\\lwy_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Web1905\\项目\\lwy\\lwy_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Web1905\\项目\\lwy\\lwy_vue\\src\\views\\Details.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Web1905\\项目\\lwy\\lwy_vue\\src\\views\\Details.vue","mtime":1568896320721},{"path":"D:\\Web1905\\项目\\lwy\\lwy_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Web1905\\项目\\lwy\\lwy_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Web1905\\项目\\lwy\\lwy_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Web1905\\项目\\lwy\\lwy_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"D:\\\\Web1905\\\\\\u9879\\u76EE\\\\lwy\\\\lwy_vue\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      enter: false,\n      bgImg: {\n        bgImgClass: false\n      },\n      product: {\n        price: 0\n      },\n      pics: [{\n        md: 'img/detail/md1.jpg',\n        sm: 'img/detail/sm1.jpg',\n        lg: 'img/detail/lg1.jpg'\n      }],\n      specs: [],\n      imgUrl: \"http://127.0.0.1:5050/\",\n      // 控制每张小图片鼠标滑过的样式\n      imgClasses: [],\n      // 判断是选中的哪一张小图片\n      i: 0,\n      // 判断选中的颜色\n      selectColors: [],\n      // 控制详情的导航部分文字变红\n      textRed: [{\n        active: false\n      }, {\n        active: false\n      }, {\n        active: false\n      }, {\n        active: false\n      }],\n      // 礼物详情的模拟数据\n      detailsImages: [\"../../../../public/images/detail/1.jpg\", \"../../../public/images/detail/2.jpg\", \"../../../public/images/detail/3.jpg\", \"../../../public/images/detail/4.jpg\", \"../../../public/images/detail/5.jpg\", \"../../../public/images/detail/5.jpg\", \"../../../public/images/detail/6.jpg\"],\n      navOffsetTop: 0\n    };\n  },\n  props: {\n    pid: {\n      default: 0\n    }\n  },\n  created: function created() {\n    console.log(this.pid);\n    this.loadMore(); // this.navOffsetTop=this.getElementToPageTop(document.getElementById('detailNav'));\n    // console.log(this.navOffsetTop);\n  },\n  methods: {\n    scroll: function scroll(t) {\n      console.log(t);\n    },\n    changeRed: function changeRed(e) {\n      if (e.target.nodeName == \"A\") {\n        var id = e.target.dataset.i;\n\n        for (var t = 0; t < this.textRed.length; t++) {\n          if (t == id) {\n            this.textRed[t].active = true;\n          } else {\n            this.textRed[t].active = false;\n          }\n        }\n      }\n    },\n    loadMore: function loadMore() {\n      var _this = this;\n\n      _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var res, obj, p, i;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.axios.get('detail/getPro', {\n                  params: {\n                    pid: _this.pid\n                  }\n                });\n\n              case 2:\n                res = _context.sent;\n                // console.log(res.data);\n                obj = res.data; // this.product=obj.product;\n\n                for (p in obj.product) {\n                  // this.$set相当于手动去将this.product处理成一个响应式的属性\n                  _this.$set(_this.product, p, obj.product[p]);\n                }\n\n                _this.pics = obj.pics;\n\n                for (i = 0; i < _this.pics.length; i++) {\n                  if (i == 0) {\n                    _this.$set(_this.imgClasses, i, 1);\n                  } else {\n                    _this.$set(_this.imgClasses, i, 0);\n                  }\n\n                  _this.$set(_this.selectColors, i, 0);\n                }\n\n                _this.specs = obj.specs; // console.log(this.product,this.pics,this.specs);\n\n                console.log(_this.pics);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    //选择颜色事件\n    changeColor: function changeColor(e) {\n      if (e.target.nodeName == \"A\") {\n        for (var c = 0; c < this.selectColors.length; c++) {\n          this.$set(this.selectColors, c, 0);\n        }\n\n        var ci = e.target.dataset.ci;\n        this.$set(this.selectColors, ci, 1);\n        console.log(this.selectColors); // 对应的选中相应颜色的小图片与大图片\n\n        this.changeImg(ci);\n      }\n    },\n    // 鼠标移到哪个小图片 哪个小图片就加上红色边框 并且切换对应的大图片\n    changeImg: function changeImg(i) {\n      // 其他小图片去掉红色边框\n      for (var j = 0; j < this.imgClasses.length; j++) {\n        this.imgClasses[j] = 0;\n      } // 当前的小图片加边框\n\n\n      this.imgClasses[i] = 1; // 切换大图片\n\n      this.i = i;\n    },\n    bgImgHandle: function bgImgHandle() {\n      var _this2 = this;\n\n      _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _this2.axios.get('user/isLogin');\n\n              case 2:\n                res = _context2.sent;\n                console.log(res.data);\n\n                if (res.data.code == -1) {\n                  alert(\"请先登录！登录后才能收藏\");\n                } else {\n                  _this2.bgImg.bgImgClass = !_this2.bgImg.bgImgClass;\n                }\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    }\n  },\n  watch: {\n    // 一旦浏览器中的地址改变 刷新网页 重新发送ajax请求\n    $route: function $route() {\n      this.loadMore();\n    }\n  }\n};",{"version":3,"sources":["Details.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div>\r\n        <my-header></my-header>\r\n        <div id=\"page_detail\">\r\n            <bread breadName=\"BeeFo小唱机\"></bread>\r\n            <div class=\"goods_info\">\r\n                <div class=\"center w1200 d-flex\">\r\n                    <div class=\"images d-flex\">\r\n                        <!-- 小图 -->\r\n                        <ul class=\"d-flex\">\r\n                            <li v-for=\"(item,index) of pics\" :key=\"index\" >\r\n                                <img :src=\"imgUrl+item.sm\" alt=\"\"  :class=\"imgClasses[index]?'borderRed':''\" @mouseover=\"changeImg(index)\">\r\n                            </li>\r\n                        </ul>\r\n                        <!-- 中图 -->\r\n                        <div class=\"mdImg relative\">\r\n                            <img :src=\"imgUrl+pics[i].md\" alt=\"\">\r\n                            <div v-show=\"enter\" class=\"smMask\"></div>\r\n                            <div class=\"Mask\" @mouseover=\"enter=!enter\" @mouseout=\"enter=!enter\"></div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"goods_attr\">\r\n                        <h2 v-text=\"product.title\"></h2>\r\n                        <h3 class=\"subtitle\" v-text=\"product.subtitle\"></h3>\r\n                        <div class=\"good_price d-flex\">\r\n                            <span>{{product.price.toFixed(2)}}元</span>\r\n                            <span class=\"color666\" v-text=\"pics[i].is_spot?'有现货':'暂时缺货'\"></span>\r\n                        </div>\r\n                        <div class=\"specs\">\r\n                            <div>\r\n                                <span class=\"block color666\">选择规格:</span>\r\n                                <!-- 规格与浏览器中参数id值一致时 说明是选中状态 -->\r\n                                <router-link :to=\"/Details/+item.pid\" v-for=\"(item,index) of specs\" :key=\"index\" class=\"block option\" :class=\"item.pid==pid?'optionSelected':''\"  v-text=\"item.spec\"></router-link>\r\n                            </div>\r\n                            <div class=\"colors\" @click=\"changeColor\">\r\n                                <p>\r\n                                  <span class=\"block color666\">礼物颜色:</span>  \r\n                                </p>\r\n                                <router-link to=\"\" v-for=\"(item,index) of pics\" :key=\"index\"  :data-ci=\"index\" class=\"block option\" :class=\"selectColors[index]==1?'colorSelected':''\" v-text=\"item.color\"></router-link>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"buy\">\r\n                            <router-link to=\"\" >立即购买</router-link>\r\n                            <a href=\"javascript:;\" class=\"sc\" @click=\"bgImgHandle\">\r\n                                <i :class=\"bgImg\"></i>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div id=\"detailNav\" class=\"details_nav\">\r\n                <div class=\"w-1200\">\r\n                    <ul class=\"w-1200 d-flex\" @click=\"changeRed\">\r\n                        <li>\r\n                           <a href=\"javascript:;\" :class=\"textRed[0]\" data-i=\"0\">礼物详情</a> \r\n                        </li>\r\n                        <li>\r\n                            <a href=\"javascript:;\" :class=\"textRed[1]\"  data-i=\"1\">规格参数</a> \r\n                        </li>\r\n                        <li>\r\n                            <a href=\"javascript:;\" :class=\"textRed[2]\"  data-i=\"2\">视频晒单(5)</a> \r\n                        </li>\r\n                        <li>\r\n                            <a href=\"javascript:;\" :class=\"textRed[3]\"  data-i=\"3\">咨询(5)</a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div id=\"detailContent\">\r\n                <img v-for=\"(item,index) of detailsImages\" :key=\"index\" :src=\"item\" alt=\"\">\r\n            </div>\r\n            <div id=\"detailParams\"></div>\r\n            <div id=\"detailComment\"></div>\r\n            <div id=\"detailRequest\"></div>\r\n            <!-- 子组件将scrollTop传给父组件 -->\r\n            <tool-bars @scroll=\"scroll\"></tool-bars>   \r\n        </div>\r\n        <my-footer></my-footer>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    data(){\r\n        return{\r\n            enter:false,\r\n            bgImg:{\r\n               bgImgClass:false \r\n            },\r\n            product:{price:0},\r\n            pics:[{md:'img/detail/md1.jpg',sm:'img/detail/sm1.jpg',lg:'img/detail/lg1.jpg'}],\r\n            specs:[] ,\r\n            imgUrl:\"http://127.0.0.1:5050/\",\r\n            // 控制每张小图片鼠标滑过的样式\r\n            imgClasses:[],\r\n            // 判断是选中的哪一张小图片\r\n            i:0,\r\n            // 判断选中的颜色\r\n            selectColors:[],\r\n            // 控制详情的导航部分文字变红\r\n            textRed:[{active:false},{active:false},{active:false},{active:false}],\r\n            // 礼物详情的模拟数据\r\n            detailsImages:[\"../../../../public/images/detail/1.jpg\",\"../../../public/images/detail/2.jpg\",\"../../../public/images/detail/3.jpg\",\"../../../public/images/detail/4.jpg\",\"../../../public/images/detail/5.jpg\",\"../../../public/images/detail/5.jpg\",\"../../../public/images/detail/6.jpg\"],\r\n            navOffsetTop:0\r\n        }\r\n    },\r\n    props:{pid:{default:0}},\r\n    created(){\r\n        console.log(this.pid);\r\n        this.loadMore();    \r\n        // this.navOffsetTop=this.getElementToPageTop(document.getElementById('detailNav'));\r\n        // console.log(this.navOffsetTop);\r\n    },\r\n    methods:{\r\n        \r\n        scroll(t){\r\n          console.log(t);  \r\n        },\r\n        changeRed(e){\r\n            if(e.target.nodeName==\"A\"){\r\n                var id=e.target.dataset.i;\r\n               for(var t=0;t<this.textRed.length;t++){\r\n                   if(t==id){\r\n                       this.textRed[t].active=true;\r\n                   }else{\r\n                       this.textRed[t].active=false;\r\n                   }\r\n               }\r\n            }\r\n        },\r\n        loadMore(){\r\n            (async ()=>{\r\n                var res=await this.axios.get('detail/getPro',{\r\n                    params:{\r\n                        pid:this.pid\r\n                    }\r\n                });\r\n                // console.log(res.data);\r\n                var obj=res.data;\r\n                // this.product=obj.product;\r\n                for (const p in obj.product) {\r\n                // this.$set相当于手动去将this.product处理成一个响应式的属性\r\n                this.$set(this.product,p,obj.product[p]);\r\n                }\r\n                this.pics=obj.pics;\r\n                for(var i=0;i<this.pics.length;i++){\r\n                    if(i==0){\r\n                        this.$set(this.imgClasses,i,1);\r\n                    }else{\r\n                        this.$set(this.imgClasses,i,0);\r\n                    }\r\n                    this.$set(this.selectColors,i,0);\r\n                }\r\n                this.specs=obj.specs;\r\n                // console.log(this.product,this.pics,this.specs);\r\n                console.log(this.pics);\r\n            })();\r\n        },\r\n        //选择颜色事件\r\n        changeColor(e){\r\n            if(e.target.nodeName==\"A\"){\r\n                for (var c=0;c<this.selectColors.length;c++) {\r\n                    this.$set(this.selectColors,c,0);\r\n                }\r\n                var ci=e.target.dataset.ci;\r\n                this.$set(this.selectColors,ci,1);\r\n                console.log(this.selectColors);\r\n                // 对应的选中相应颜色的小图片与大图片\r\n                this.changeImg(ci);\r\n            }\r\n        },\r\n        // 鼠标移到哪个小图片 哪个小图片就加上红色边框 并且切换对应的大图片\r\n        changeImg(i){\r\n            // 其他小图片去掉红色边框\r\n            for(var j=0;j<this.imgClasses.length;j++){\r\n                this.imgClasses[j]=0;\r\n            }\r\n            // 当前的小图片加边框\r\n            this.imgClasses[i]=1;\r\n            // 切换大图片\r\n            this.i=i; \r\n\r\n        },\r\n        bgImgHandle(){\r\n            (async ()=>{\r\n                var res=await this.axios.get('user/isLogin');\r\n                console.log(res.data);\r\n                if(res.data.code==-1){\r\n                    alert(\"请先登录！登录后才能收藏\");\r\n                }else{\r\n                    this.bgImg.bgImgClass=!this.bgImg.bgImgClass; \r\n                }\r\n            })();\r\n           \r\n        }\r\n    },\r\n    watch:{\r\n        // 一旦浏览器中的地址改变 刷新网页 重新发送ajax请求\r\n        $route(){\r\n            this.loadMore();\r\n        }\r\n    }\r\n\r\n}\r\n</script>\r\n<style scoped>\r\n    @import url(../assets/css/details.css);\r\n</style>\r\n"],"sourceRoot":"src/views"}]}